<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++ .h .lib .dll文件，静态链接库与动态链接库，静态调用与动态调用</title>
      <link href="2020/03/28/C%20%20.h%20.lib%20.dll%E6%96%87%E4%BB%B6%EF%BC%8C%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%E4%B8%8E%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%EF%BC%8C%E9%9D%99%E6%80%81%E8%B0%83%E7%94%A8%E4%B8%8E%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8/"/>
      <url>2020/03/28/C%20%20.h%20.lib%20.dll%E6%96%87%E4%BB%B6%EF%BC%8C%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%E4%B8%8E%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%EF%BC%8C%E9%9D%99%E6%80%81%E8%B0%83%E7%94%A8%E4%B8%8E%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-h-lib-dll文件，静态链接库与动态链接库，静态调用与动态调用"><a href="#C-h-lib-dll文件，静态链接库与动态链接库，静态调用与动态调用" class="headerlink" title="C++ .h .lib .dll文件，静态链接库与动态链接库，静态调用与动态调用"></a>C++ .h .lib .dll文件，静态链接库与动态链接库，静态调用与动态调用</h1><p>为了大家共享代码而产生了库，同时也省去了库函数被重复编译的额外开销</p><p>Windows静态链接库<code>lib</code>，动态链接库<code>dll</code></p><p><code>lib</code>在程序Link时被整体纳入，用则打包带走，不用则无</p><p><code>dll</code>在程序Runtime才被使用</p><p><code>dll</code>的调用分为静态调用和动态调用</p><p>动态调用，一般用<code>LoadLibrary</code>装载<code>dll</code>，<code>GetProcAddress</code>获取函数，<code>FreeLibrary</code>释放<code>dll</code></p><p>静态调用，由编译系统完成<code>dll</code>的装载和卸载代码（需要有写dll时生成的引入库lib，此lib中包含dll中各函数偏移地址）</p><p>调用小结：</p><p><code>lib</code> – <code>h文件+lib文件</code></p><p><code>dll动态调用</code> – <code>h文件+dll文件</code></p><p><code>dll静态调用</code> – <code>h文件+dll文件+lib文件（dll导入库）</code></p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ 文件调用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boost的编译工具B2的参数说明列表</title>
      <link href="2020/03/23/BOOST%E7%9A%84%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7B2%E7%9A%84%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E%E5%88%97%E8%A1%A8/"/>
      <url>2020/03/23/BOOST%E7%9A%84%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7B2%E7%9A%84%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>b2/bjam 参数说明：<br>b2 命令的功能强大，用起来也比较复杂，因此在使用之前，最好先查看一下该命令的帮助：</p><p>b2.exe –help<br>以下是一些比较重要的参数说明：</p><p>stage/install：</p><p>stage 表示只生成库（dll 和 lib），install 还会生成包含头文件的 include 目录。推荐使用 stage，因为 install 生成的 include 目录实际就是源码包下的 boost 目录，需要 include 的时候可以直接使用，不需要再次生成，这样可以节省大量的编译时间。</p><p>toolset：</p><p>指定编译器，可选的如 borland、gcc、msvc-14.0（VS2015）等。如果不指定，会自动搜索本地可用的编译器（可查看 ./project-config.jam 文件以确认）。</p><p>without/with：</p><p>选择不编译/编译哪些库（类似于黑名单/白名单）。–with-python 的含义是仅编译 python，其他的都不编译。反过来，如果用 –without-python，意思就是除了 python， 其他的都编译。with/without 参数可以多次出现，以限定多个库。如果不设置 with/without 参数，默认全部编译，可能需要几个小时的时间！</p><p>需要注意，编译 Boost.python 需要确保本地安装了 Python，并且 python 命令已加入环境变量。</p><p>要查看 Boost 包含的所有库，可使用以下命令：</p><p>b2.exe –show-libraries<br>stagedir/prefix：</p><p>stage 时使用 stagedir，install 时使用 prefix，表示编译生成文件的路径。推荐给不同的编译环境指定不同的目录，如 Visual Studio 2015 的 x86 应用对应的是 bin/lib32-msvc-14.0，x64 应用对应的是 bin/lib64-msvc-14.0。如果都生成到一个目录下，将没有任何益处，徒增管理难度。如果使用了 install 参数，那么还将在上述指定的目录下生成 include 目录，用于保存头文件。</p><p>build-dir：</p><p>编译生成的中间文件的路径，默认是 Boost 根目录下的 bin.v2 目录，一般无需设置。</p><p>link：</p><p>指定生成动态链接库还是静态链接库，取值为 static|shared。生成静态链接库使用 static，生成动态链接库需使用 shared。如不指定，默认使用 static。静态库的缺点是占用空间比较大，优点是程序发布的时候无需附带 Boost 库的 dll，比较整洁。推荐使用静态库的方式编译 Boost.python，这样发布程序的时候就不用 Boost 的 dll 了，并且也多占用不了太多空间。</p><p>runtime-link：</p><p>指定运行时是动态还是静态链接其他库。同样有 shared 和 static 两种方式。如果不指定，默认是 shared，一般无需设置。</p><p>threading：</p><p>要编译的库是单线程还是多线程，可取值 single|multi。如果不指定，默认是 multi，一般无需设置。</p><p>variant</p><p>debug|release，编译 debug 版本还是 release 版本。一般与最终发布的程序是 debug 还是 release 版相对应。如果不指定，默认两个都编译，一般无需设置。</p><p>address-model</p><p>编译成 32 位版本还是 64 位版本，可取值 32|64。如果不指定，默认两个版本都编译。如果是编译 Boost.python，该参数就要与本地安装的 Python 位数相对应，否则编译会出错，因此最好设置一下。</p><p>Boost 静态库/动态库的命名规则<br>以 Boost.python 为例，如果编译的是静态库（link=static），将会生成单个 .lib 文件：</p><p>libboost_python36-vc140-mt-gd-x32-1_68.lib<br>而如果编译的是动态库（link=shared），将会生成两个文件（.lib 和 .dll）：</p><p>boost_python36-vc140-mt-gd-x32-1_68.lib<br>boost_python36-vc140-mt-gd-x32-1_68.dll<br>动态库虽然也生成 .lib 文件，但它与静态库的 .lib 文件差别很大。动态库的 .lib 更像是对 .dll 的声明，二者的关系类似于 .h 与 .cpp 的关系。因此，动态库中的 .lib 文件要比静态库的 .lib 文件小得多。</p><p>下面以静态库的命名规则为例进行分析：</p><p>libboost_python36-vc140-mt-sgd-x32-1_68.lib<br>| || | | | | | || ||| | | | |</p><p>— —— — — – – – —<br>1 2 3 4 5 6 7 8 9<br>静态库以 lib 开头，动态库开头没有 lib。<br>所有的库都含有 boost 前缀。<br>Boost 库名称，本例中为 python36。<br>编译器名称及其版本，vc140 指的是 msvc-14.0，对应 Visual Studio 2015。<br>有 mt 代表 threading=multi，没有则代表 threading=single。<br>有 s 代表 runtime-link=static，没有则代表 runtime-link=shared。<br>有 gd 代表 debug 版本，没有则代表 release 版本。<br>目标位数，x32 代表 32 位，x64 代表 64 位。<br>Boost 库的版本号，1_68 代表 Boost 1.68 版本。</p>]]></content>
      
      
      <categories>
          
          <category> Boost </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Boost Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime3配置Python3解释器</title>
      <link href="2020/03/22/Sublime%20Sublime3%E9%85%8D%E7%BD%AEPython3%E8%A7%A3%E9%87%8A%E5%99%A8/"/>
      <url>2020/03/22/Sublime%20Sublime3%E9%85%8D%E7%BD%AEPython3%E8%A7%A3%E9%87%8A%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Sublime3添加新的配置"><a href="#Sublime3添加新的配置" class="headerlink" title="Sublime3添加新的配置"></a>Sublime3添加新的配置</h1><p><img src="https://fp1.fghrsh.net/2020/03/22/f57042d269b5413535ca91d7cf6c41e9.png"></p><p><img src="https://fp1.fghrsh.net/2020/03/22/0061ff63fbe8f3066f59041b31ac2b8d.png"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">    &#123;</span></span><br><span class="line"><span class="code">    &quot;encoding&quot;: &quot;utf-8&quot;,</span></span><br><span class="line"><span class="code">    &quot;working_dir&quot;: &quot;$file_path&quot;,</span></span><br><span class="line"><span class="code">    &quot;shell_cmd&quot;: &quot;C:\\python36\\python.exe -u \&quot;$file\&quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;file_regex&quot;: &quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;,</span></span><br><span class="line"><span class="code">    &quot;selector&quot;: &quot;source.python&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>shell cmd 里面配置好自己的解释器位置<br>别忘记将这个文件的文件名修改为自己的 untitled.sublime-build-&gt; Python37.sublime-build 或者其他 You like~!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈PAC 叫你动手修改PAC文件以及user-rule文件实现自动代理</title>
      <link href="2020/03/22/%E7%BD%91%E7%BB%9C%20%E6%B5%85%E6%9E%90PAC%20%E6%95%99%E4%BD%A0%E5%8A%A8%E6%89%8B%E4%BF%AE%E6%94%B9%E4%BD%A0%E7%9A%84PAC%E6%96%87%E4%BB%B6%E5%8F%8Auser-rule%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%90%86/"/>
      <url>2020/03/22/%E7%BD%91%E7%BB%9C%20%E6%B5%85%E6%9E%90PAC%20%E6%95%99%E4%BD%A0%E5%8A%A8%E6%89%8B%E4%BF%AE%E6%94%B9%E4%BD%A0%E7%9A%84PAC%E6%96%87%E4%BB%B6%E5%8F%8Auser-rule%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Shadowsocks作为现在一种很流行的穿墙工具，以其轻量级、速度感人等优点深受广大网友热捧。与VP_N相比，他就像一把锋利的”瑞士军刀”，不用受制于“系统全局代理”模式的困扰，控制更加便捷，基于Socks5安全加密协议，防止GF*W通过分析流量特征从而干扰的问题。而又不像GoAgent这种集中式爬墙模式，一般不会出现全局封锁等现象。不管你是因为什么原因喜欢上Shadowsocks，我相信她一定有给你带来好的体验的方面。</p><p>在Shadowsocks里面，系统代理模式有两种，一种是“系统代理模式”，另一种是“PAC代理模式”，通常情况下我们会选择后者，今天这里给大家解析一下PAC模式的原理以及如何修改PAC文件、user-rule文件实现自动代理，希望大家可以通过本文更的“科学上网”。</p><h1 id="什么是PAC"><a href="#什么是PAC" class="headerlink" title="什么是PAC"></a>什么是PAC</h1><p>代理自动配置（英语：Proxy auto-config，简称PAC）是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。</p><p>一个PAC文件包含一个JavaScript形式的函数“FindProxyForURL(url, host)”。这个函数返回一个包含一个或多个访问规则的字符串。用户代理根据这些规则适用一个特定的代理其或者直接访问。当一个代理服务器无法响应的时候，多个访问规则提供了其他的后备访问方法。浏览器在访问其他页面以前，首先访问这个PAC文件。PAC文件中的URL可能是手工配置的，也可能是是通过网页的网络代理自发现协议（Web Proxy Autodiscovery Protocol）自动配置的。</p><p>上面是从维基百科摘录的关于PAC的解释，我做了一个简单的图片解释什么是PAC：</p><p>简单的讲，PAC就是一种配置，它能让你的浏览器智能判断哪些网站走代理，哪些不需要走代理。用过Shadowsocks的朋友应该会知道， shadowsocks.exe 同级目录下有一个 pac.txt 文件，这正是我们本文刚刚所说的pac配置文件。</p><p>打开 pac.txt 文件，可以看到如下内容:<br><img src="https://fp1.fghrsh.net/2020/03/22/a2757472cd0a2de278871e1217d00bf7.png"></p><p>可以看到pac配置文件是用的JavaScript语法，里面有一个变量 rules ，是一个JSon数组格式的数据类型，数组里面存放的是各种URL的通配符，那么在pac模式下，如果当访问符合这个数组里面任意一个URL通配符的网址时，系统会走代理，反之直连。比如图中pac配置，如果访问 <a href="http://www.cloudflare.com/index.php">http://www.cloudflare.com/index.php</a> 时，会走代理，而访问百度、新浪等国内网站则会选择直连方式。</p><h1 id="PAC的优势"><a href="#PAC的优势" class="headerlink" title="PAC的优势"></a>PAC的优势</h1><p>PAC自动代理属于智能判断模式，相比全局代理，它的优点有：</p><blockquote><p>不影响国内网站的访问速度，防止无意义的绕路<br>节省Shadowsocks服务的流量，节省服务器资源<br>控制方便</p></blockquote><h1 id="PAC文件及user-rule文件的语法规则"><a href="#PAC文件及user-rule文件的语法规则" class="headerlink" title="PAC文件及user-rule文件的语法规则"></a>PAC文件及user-rule文件的语法规则</h1><p>那么，当一个网站被墙，如何添加到PAC里面让其能够正常访问呢？在Shadowsocks里面，可以有如下两个方式：</p><blockquote><ol><li>添加到 pac.txt 文件中<br>编辑 pac.txt 文件，模仿里面的一些URL通配符，再添加一个，例如”||ip138.com”, ，注意不要忘记了 , 半角逗号，那么意思就是所有 ip138.com域名下的网址都将走Shadowsocks代理，打开ip138可以看到IP已经变成Shadowsocks所用的国外代理了</li></ol></blockquote><blockquote><ol start="2"><li>添加到 user-rule.txt 文件中<br>编辑 user-rule.txt 文件，这里和 pac.txt 文件语法不完全相同，user-rule文件中，每一行表示一个URL通配符，但是通配符语法类似。例如添加一行||ip138.com^ ，然后记得右键小飞机-PAC-从GFWList更新本地PAC，打开ip138可以看到IP已经变成Shadowsocks所用的国外代理了</li></ol></blockquote><p>注意末尾不要忘记 ^ 符号，意思是要么在这个符号的地方结束，要么后面跟着?,/等符号。</p><p>自定义代理规则的设置语法与GFWlist相同，语法规则如下：</p><blockquote><p>1.通配符支持。比如 <em>.example.com/</em> 实际书写时可省略 * ， 如.example.com/ ， 和 <em>.example.com/</em> 效果一样</p></blockquote><blockquote><p>2.正则表达式支持。以 \ 开始和结束， 如 [\w]+://example.com\</p></blockquote><blockquote><p>3.例外规则 @@ ，如 @@<em>.example.com/</em> 满足 @@ 后规则的地址不使用代理</p></blockquote><blockquote><p>4.匹配地址开始和结尾 | ，如 |<a href="http://example.com/">http://example.com</a> 、 example.com| 分别表示以 <a href="http://example.com/">http://example.com</a> 开始和以 example.com 结束的地址</p></blockquote><blockquote><p>5.|| 标记，如 ||example.com 则 <a href="http://example.com/">http://example.com</a> 、<a href="https://example.com/">https://example.com</a> 、 <a href="ftp://example.com/">ftp://example.com</a> 等地址均满足条件</p></blockquote><blockquote><ol start="6"><li>注释 ! 。 如 !我是注释</li></ol></blockquote><ul><li>更多user-rule.txt语法规则，可以参考AdBlockPlus过滤规则<a href="https://adblockplus.org/en/filter-cheatsheet">https://adblockplus.org/en/filter-cheatsheet</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python文件.py.pyi.pyc.pyo.pyd等各种文件后缀区别（全面汇总）</title>
      <link href="2020/03/10/Python%20Python%E6%96%87%E4%BB%B6.py.pyi.pyc.pyo.pyd%E7%AD%89%E5%90%84%E7%A7%8D%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%8C%BA%E5%88%AB/"/>
      <url>2020/03/10/Python%20Python%E6%96%87%E4%BB%B6.py.pyi.pyc.pyo.pyd%E7%AD%89%E5%90%84%E7%A7%8D%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>.py</code>：这通常是您编写的输入源代码。<br><code>.py3</code>: Python3脚本（Python3脚本通常以.py而不是.py3结尾，很少使用）<br><code>.pyc</code>：这是编译好的字节码。如果您导入一个模块，python将生成一个*.pyc包含字节码的文件，以便以后再次导入它更容易(也更快)。.pyc二进制文件可以反编译成.py文件，反编译软件叫Easy Python Decompiler。<br><code>.pyo</code>：这是在优化(-O)时创建的*.pyc文件,从Python3.5开始，Python将只使用pyc而不是pyo和pyc<br><code>.pyd</code>：这基本上是一个Windows DLL文件。<br><code>.pyi</code> : MyPy存根,存根文件（PEP 484）.<br><code>.pyw</code> : 用pythonw.exe执行的Windows的Python脚本<br><code>.pyx</code> : 将Cython src转换为C/C++<br><code>.pyz</code> : Python脚本归档（PEP 441）（这是一个包含标准Python脚本头之后的二进制形式的压缩Python脚本（ZIP）的脚本）<br><code>.pywz</code> : 用于MS-Windows的Python脚本归档（PEP 441）（这是一个包含标准Python脚本头之后的二进制形式的压缩Python脚本（ZIP）的脚本）<br><code>.py [cod]</code> : .gitignore中的通配符表示该文件可能是.pyc，.pyo或.pyd<br><code>.rpy</code> : 包含应用程序或框架特定功能的RPython脚本或Python脚本<br><code>.pyde</code> : 处理使用的Python脚本<br><code>.pyp</code> : Py4D Python插件<br><code>.pyt</code> : Python声明文件</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python后缀名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux nohup命令</title>
      <link href="2020/02/23/Linux%20%20nohup%E5%91%BD%E4%BB%A4/"/>
      <url>2020/02/23/Linux%20%20nohup%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="nohup和-amp-的区别"><a href="#nohup和-amp-的区别" class="headerlink" title="nohup和&amp;的区别"></a>nohup和&amp;的区别</h1><blockquote><p><code>&amp;</code> ： 指在后台运行</p></blockquote><hr><blockquote><p><code>nohup</code> ： 不挂断的运行，注意并没有后台运行的功能，，就是指，用nohup运行命令可以使命令永久的执行下去，和用户终端没有关系，例如我们断开SSH连接都不会影响他的运行，注意了nohup没有后台运行的意思；&amp;才是后台运行</p></blockquote><p><code>&amp;</code>是指在后台运行，但当用户推出(挂起)的时候，命令自动也跟着退出</p><p>那么，我们可以巧妙的吧他们结合起来用就是<br><code>nohup</code> <code>COMMAND</code> <code>&amp;</code><br>这样就能使命令永久的在后台执行<br>例如：</p><ol><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh test.sh &amp;</span><br></pre></td></tr></table></figure>将sh test.sh任务放到后台 ，即使关闭xshell退出当前session依然继续运行，但标准输出和标准错误信息会丢失（缺少的日志的输出）<br>将sh test.sh任务放到后台 ，关闭xshell，对应的任务也跟着停止。</li><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nohup sh test.sh</span><br><span class="line">```  </span><br><span class="line">将sh test.sh任务放到后台，关闭标准输入，终端不再能够接收任何输入（标准输入），重定向标准输出和标准错误到当前目录下的nohup.out文件，即使关闭xshell退出当前session依然继续运行。</span><br><span class="line">3. </span><br><span class="line">```shell</span><br><span class="line">nohup sh test.sh  &amp;</span><br></pre></td></tr></table></figure>将sh test.sh任务放到后台，但是依然可以使用标准输入，终端能够接收任何输入，重定向标准输出和标准错误到当前目录下的nohup.out文件，即使关闭xshell退出当前session依然继续运行。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="2020/01/14/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2020/01/14/Git%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git常用指令"><a href="#Git常用指令" class="headerlink" title="Git常用指令"></a>Git常用指令</h1><p><img src="https://fp1.fghrsh.net/2020/01/04/502797fa6c07f6c3e561ca84271bcb9c.png"></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10 桌面图标消失不见</title>
      <link href="2019/12/23/Windows10%20Windows10%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%B6%88%E5%A4%B1/"/>
      <url>2019/12/23/Windows10%20Windows10%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%B6%88%E5%A4%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>桌面图标时长显示不出</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>打开任务管理器,重新运行Windows资源管理器</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows10 </tag>
            
            <tag> 常识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【钢琴】远空 遠い空へ -三輪学</title>
      <link href="2019/09/24/%E8%A7%86%E9%A2%91%20%E3%80%90%E9%92%A2%E7%90%B4%E3%80%91%E8%BF%9C%E7%A9%BA%20%E9%81%A0%E3%81%84%E7%A9%BA%E3%81%B8%20-%E4%B8%89%E8%BC%AA%E5%AD%A6/"/>
      <url>2019/09/24/%E8%A7%86%E9%A2%91%20%E3%80%90%E9%92%A2%E7%90%B4%E3%80%91%E8%BF%9C%E7%A9%BA%20%E9%81%A0%E3%81%84%E7%A9%BA%E3%81%B8%20-%E4%B8%89%E8%BC%AA%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="【钢琴】远空-遠い空へ-三輪学"><a href="#【钢琴】远空-遠い空へ-三輪学" class="headerlink" title="【钢琴】远空 遠い空へ -三輪学"></a>【钢琴】远空 遠い空へ -三輪学</h1><iframe  width="900px" height="630px" src="//player.bilibili.com/player.html?aid=43292517&cid=75890905&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 收藏的视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Cookie</title>
      <link href="2019/08/14/Vue%20Cookie/"/>
      <url>2019/08/14/Vue%20Cookie/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前台操作Cookie：vue-cookie"><a href="#前台操作Cookie：vue-cookie" class="headerlink" title="前台操作Cookie：vue-cookie"></a>前台操作Cookie：vue-cookie</h2><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;: cd 项目目录</span><br><span class="line">&gt;: cnpm install vue-cookie --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="配置：main-js"><a href="#配置：main-js" class="headerlink" title="配置：main.js"></a>配置：main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">&#x27;vue-cookie&#x27;</span></span><br><span class="line">Vue.prototype.$cookie = cookie;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="使用：在任何方法中"><a href="#使用：在任何方法中" class="headerlink" title="使用：在任何方法中"></a>使用：在任何方法中</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// token是后台返回的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.set(key, value, time)</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.set(<span class="string">&#x27;token&#x27;</span>, token, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.get(key)</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>.$cookie.get(<span class="string">&#x27;token&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.delete(key)</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.delete(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> Vue Cookie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue前后台数据交互axios</title>
      <link href="2019/08/14/Vue%20%E5%89%8D%E5%90%8E%E8%B0%83%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92axios/"/>
      <url>2019/08/14/Vue%20%E5%89%8D%E5%90%8E%E8%B0%83%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92axios/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前后台交互：axios"><a href="#前后台交互：axios" class="headerlink" title="前后台交互：axios"></a>前后台交互：axios</h2><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;: cd 项目目录</span><br><span class="line">&gt;: cnpm install axios --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="配置：main-js"><a href="#配置：main-js" class="headerlink" title="配置：main.js"></a>配置：main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.$axios = Axios;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="跨域问题-同源策略-：Access-Control-Allow-Origin-gt-CORS"><a href="#跨域问题-同源策略-：Access-Control-Allow-Origin-gt-CORS" class="headerlink" title="跨域问题(同源策略)：Access-Control-Allow-Origin =&gt; CORS"></a>跨域问题(同源策略)：Access-Control-Allow-Origin =&gt; CORS</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前提：前台向后跳请求数据</span><br><span class="line">1）服务器不一致 - ip</span><br><span class="line">2）应用不一致 - 端口</span><br><span class="line">3）协议不一致 - http &lt;-&gt; https</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="django解决跨域"><a href="#django解决跨域" class="headerlink" title="django解决跨域"></a>django解决跨域</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1）安装django-cors-headers模块</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）在settings.py中配置</span></span><br><span class="line"><span class="string"># 注册app</span></span><br><span class="line"><span class="string">INSTALLED_APPS = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">3）添加中间件</span></span><br><span class="line"><span class="string">MIDDLEWARE = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">4）允许跨域源</span></span><br><span class="line"><span class="string">CORS_ORIGIN_ALLOW_ALL = True</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="axios请求方式"><a href="#axios请求方式" class="headerlink" title="axios请求方式"></a>axios请求方式</h5><p>get</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">usr</span>: <span class="string">&#x27;zero&#x27;</span>,</span><br><span class="line">        <span class="attr">pwd</span>: <span class="string">&#x27;000&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$axios.get(<span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">usr</span>: <span class="string">&#x27;zero&#x27;</span>,</span><br><span class="line">        <span class="attr">pwd</span>: <span class="string">&#x27;000&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>post</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">username</span>: <span class="string">&#x27;owen&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> Vue axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue路由</title>
      <link href="2019/08/14/Vue%20%E8%B7%AF%E7%94%B1/"/>
      <url>2019/08/14/Vue%20%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="路由：vue-router"><a href="#路由：vue-router" class="headerlink" title="路由：vue-router"></a>路由：vue-router</h2><h4 id="1）name使用"><a href="#1）name使用" class="headerlink" title="1）name使用"></a>1）name使用</h4><h5 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">&#x27;./views/Main&#x27;</span></span><br><span class="line"><span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/main&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Main</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="视图使用"><a href="#视图使用" class="headerlink" title="视图使用"></a>视图使用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123;name: &#x27;main&#x27;&#125;&quot;&gt;主页&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h5 id="2）router-link与系统a标签的区别"><a href="#2）router-link与系统a标签的区别" class="headerlink" title="2）router-link与系统a标签的区别"></a>2）router-link与系统a标签的区别</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router-link：会被vue渲染成a标签，但是点击这样的a标签不能发生页面的转跳，只会出现组件的替换</span><br><span class="line">a：也可以完成同样的效果，但是会发生页面的转跳</span><br></pre></td></tr></table></figure><h5 id="3）路由重定向"><a href="#3）路由重定向" class="headerlink" title="3）路由重定向"></a>3）路由重定向</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        <span class="attr">redirect</span>: <span class="string">&#x27;/&#x27;</span>, <span class="comment">// 重定向</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="4）路由传参-1"><a href="#4）路由传参-1" class="headerlink" title="4）路由传参-1"></a>4）路由传参-1</h5><h5 id="路由：router-js"><a href="#路由：router-js" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// path如果是通过to直接访问，路由必须完全对应</span></span><br><span class="line">    <span class="comment">// :id代表可以完成任意内容匹配，用变量id保存 </span></span><br><span class="line">    <span class="comment">// 请求/course/detail/1 和 /course/detail/abc，id变量分别存的1和abc</span></span><br><span class="line">    <span class="comment">// path: &#x27;/course/detail/1&#x27;,  // 死的</span></span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail/:id&#x27;</span>,  <span class="comment">// 活的</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue"><a href="#转跳页面：Course-vue" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;course&quot;&gt;</span><br><span class="line">        &lt;h1&gt;课程&lt;/h1&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;course in courses&quot; :key=&quot;course.title&quot;&gt;</span><br><span class="line">                &lt;router-link :to=&quot;&#x27;/course/detail/&#x27; + course.id&quot;&gt;&#123;&#123; course.title &#125;&#125;&lt;/router-link&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let course_list = [</span><br><span class="line">        &#123;</span><br><span class="line">            id: 1,</span><br><span class="line">            title: &#x27;水浒传&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            id: 2,</span><br><span class="line">            title: &#x27;西游记&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            id: 3,</span><br><span class="line">            title: &#x27;金瓶梅&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Course&quot;,</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                courses: []</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 组件创建成功去获取数据</span><br><span class="line">        created () &#123;</span><br><span class="line">            this.courses = course_list</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    li a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line">    li, li a &#123;</span><br><span class="line">        border: 1px solid pink;</span><br><span class="line">        background-color: rgba(123, 21, 56, 0.3);</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        line-height: 80px;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue"><a href="#渲染页面：CourseDetail-vue" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;course-detail&quot;&gt;</span><br><span class="line">        &lt;h1&gt;课程详情&lt;/h1&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123; ctx &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let course_detail_list = [</span><br><span class="line">        &#x27;数据有误&#x27;, &#x27;水浒传&#x27;, &#x27;西游记&#x27;, &#x27;金瓶梅&#x27;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;CourseDetail&quot;,</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                ctx: &#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created () &#123;</span><br><span class="line">            console.log(&#x27;详情页面被渲染了&#x27;);</span><br><span class="line">            // this.$route：负责路由的数据</span><br><span class="line">            // this.$router：负责路由的路径</span><br><span class="line">            // this.$route.params可以拿到链接中 :变量 变量中的数据</span><br><span class="line">            let index = this.$route.params.id;</span><br><span class="line">            if (index &lt; 0 || index &gt;= course_detail_list.length) index = 0;</span><br><span class="line">            this.ctx = course_detail_list[index]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="4）路由传参-2"><a href="#4）路由传参-2" class="headerlink" title="4）路由传参-2"></a>4）路由传参-2</h5><h5 id="路由：router-js-1"><a href="#路由：router-js-1" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue-1"><a href="#转跳页面：Course-vue-1" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#x27;/course/detail?id=&#x27; + course.id&quot;&gt;&#123;&#123; course.title &#125;&#125;&lt;/router-link&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue-1"><a href="#渲染页面：CourseDetail-vue-1" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">    <span class="keyword">let</span> index = <span class="built_in">this</span>.$route.query.id;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= course_detail_list.length) index = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.ctx = course_detail_list[index]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="5）路由传参-3"><a href="#5）路由传参-3" class="headerlink" title="5）路由传参-3"></a>5）路由传参-3</h5><h5 id="路由：router-js-2"><a href="#路由：router-js-2" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue-2"><a href="#转跳页面：Course-vue-2" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    转跳的方法 (参数) &#123;</span><br><span class="line">        <span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">            params 或者 query: &#123;</span><br><span class="line">                参数们</span><br><span class="line">            &#125;,</span><br><span class="line">            : &#123;</span><br><span class="line">                参数们</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue-2"><a href="#渲染页面：CourseDetail-vue-2" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">    <span class="keyword">let</span> 参数的数据 = <span class="built_in">this</span>.$route.query.参数的key 或者 <span class="built_in">this</span>.$route.params.参数的key</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="6）go"><a href="#6）go" class="headerlink" title="6）go"></a>6）go</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.go(-<span class="number">1</span>)  <span class="comment">//返回历史记录的前一页</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> Vue路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue路由仓库跨域axios</title>
      <link href="2019/08/14/Vue%20%E4%BB%93%E5%BA%93/"/>
      <url>2019/08/14/Vue%20%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="仓库：vuex"><a href="#仓库：vuex" class="headerlink" title="仓库：vuex"></a>仓库：vuex</h2><h5 id="仓库配置：store-js"><a href="#仓库配置：store-js" class="headerlink" title="仓库配置：store.js"></a>仓库配置：store.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    <span class="comment">// 全局可以访问的变量 - 获取值</span></span><br><span class="line">    <span class="comment">// 组件内：this.$store.state.title</span></span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;主页&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 全局可以访问的方法 - 修改值</span></span><br><span class="line">    <span class="comment">// 组件内：this.$store.commit(&#x27;updateTitle&#x27;, &#x27;新值&#x27;)</span></span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        updateTitle (state, newValue) &#123;</span><br><span class="line">            state.title = newValue</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> Vue仓库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue路由仓库跨域axios</title>
      <link href="2019/08/12/Vue%20%E8%B7%AF%E7%94%B1%E4%BB%93%E5%BA%93%E8%B7%A8%E5%9F%9Faxios/"/>
      <url>2019/08/12/Vue%20%E8%B7%AF%E7%94%B1%E4%BB%93%E5%BA%93%E8%B7%A8%E5%9F%9Faxios/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="路由：vue-router"><a href="#路由：vue-router" class="headerlink" title="路由：vue-router"></a>路由：vue-router</h2><h4 id="1）name使用"><a href="#1）name使用" class="headerlink" title="1）name使用"></a>1）name使用</h4><h5 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">&#x27;./views/Main&#x27;</span></span><br><span class="line"><span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/main&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Main</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="视图使用"><a href="#视图使用" class="headerlink" title="视图使用"></a>视图使用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123;name: &#x27;main&#x27;&#125;&quot;&gt;主页&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h5 id="2）router-link与系统a标签的区别"><a href="#2）router-link与系统a标签的区别" class="headerlink" title="2）router-link与系统a标签的区别"></a>2）router-link与系统a标签的区别</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router-link：会被vue渲染成a标签，但是点击这样的a标签不能发生页面的转跳，只会出现组件的替换</span><br><span class="line">a：也可以完成同样的效果，但是会发生页面的转跳</span><br></pre></td></tr></table></figure><h5 id="3）路由重定向"><a href="#3）路由重定向" class="headerlink" title="3）路由重定向"></a>3）路由重定向</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        <span class="attr">redirect</span>: <span class="string">&#x27;/&#x27;</span>, <span class="comment">// 重定向</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="4）路由传参-1"><a href="#4）路由传参-1" class="headerlink" title="4）路由传参-1"></a>4）路由传参-1</h5><h5 id="路由：router-js"><a href="#路由：router-js" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// path如果是通过to直接访问，路由必须完全对应</span></span><br><span class="line">    <span class="comment">// :id代表可以完成任意内容匹配，用变量id保存 </span></span><br><span class="line">    <span class="comment">// 请求/course/detail/1 和 /course/detail/abc，id变量分别存的1和abc</span></span><br><span class="line">    <span class="comment">// path: &#x27;/course/detail/1&#x27;,  // 死的</span></span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail/:id&#x27;</span>,  <span class="comment">// 活的</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue"><a href="#转跳页面：Course-vue" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;course&quot;&gt;</span><br><span class="line">        &lt;h1&gt;课程&lt;/h1&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;course in courses&quot; :key=&quot;course.title&quot;&gt;</span><br><span class="line">                &lt;router-link :to=&quot;&#x27;/course/detail/&#x27; + course.id&quot;&gt;&#123;&#123; course.title &#125;&#125;&lt;/router-link&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let course_list = [</span><br><span class="line">        &#123;</span><br><span class="line">            id: 1,</span><br><span class="line">            title: &#x27;水浒传&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            id: 2,</span><br><span class="line">            title: &#x27;西游记&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            id: 3,</span><br><span class="line">            title: &#x27;金瓶梅&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Course&quot;,</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                courses: []</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 组件创建成功去获取数据</span><br><span class="line">        created () &#123;</span><br><span class="line">            this.courses = course_list</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    li a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line">    li, li a &#123;</span><br><span class="line">        border: 1px solid pink;</span><br><span class="line">        background-color: rgba(123, 21, 56, 0.3);</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        line-height: 80px;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue"><a href="#渲染页面：CourseDetail-vue" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;course-detail&quot;&gt;</span><br><span class="line">        &lt;h1&gt;课程详情&lt;/h1&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123; ctx &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let course_detail_list = [</span><br><span class="line">        &#x27;数据有误&#x27;, &#x27;水浒传&#x27;, &#x27;西游记&#x27;, &#x27;金瓶梅&#x27;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;CourseDetail&quot;,</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                ctx: &#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created () &#123;</span><br><span class="line">            console.log(&#x27;详情页面被渲染了&#x27;);</span><br><span class="line">            // this.$route：负责路由的数据</span><br><span class="line">            // this.$router：负责路由的路径</span><br><span class="line">            // this.$route.params可以拿到链接中 :变量 变量中的数据</span><br><span class="line">            let index = this.$route.params.id;</span><br><span class="line">            if (index &lt; 0 || index &gt;= course_detail_list.length) index = 0;</span><br><span class="line">            this.ctx = course_detail_list[index]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="4）路由传参-2"><a href="#4）路由传参-2" class="headerlink" title="4）路由传参-2"></a>4）路由传参-2</h5><h5 id="路由：router-js-1"><a href="#路由：router-js-1" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue-1"><a href="#转跳页面：Course-vue-1" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#x27;/course/detail?id=&#x27; + course.id&quot;&gt;&#123;&#123; course.title &#125;&#125;&lt;/router-link&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue-1"><a href="#渲染页面：CourseDetail-vue-1" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">    <span class="keyword">let</span> index = <span class="built_in">this</span>.$route.query.id;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= course_detail_list.length) index = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.ctx = course_detail_list[index]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="5）路由传参-3"><a href="#5）路由传参-3" class="headerlink" title="5）路由传参-3"></a>5）路由传参-3</h5><h5 id="路由：router-js-2"><a href="#路由：router-js-2" class="headerlink" title="路由：router.js"></a>路由：router.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/course/detail&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: CourseDetail</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="转跳页面：Course-vue-2"><a href="#转跳页面：Course-vue-2" class="headerlink" title="转跳页面：Course.vue"></a>转跳页面：Course.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    转跳的方法 (参数) &#123;</span><br><span class="line">        <span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;course-detail&#x27;</span>,</span><br><span class="line">            params 或者 query: &#123;</span><br><span class="line">                参数们</span><br><span class="line">            &#125;,</span><br><span class="line">            : &#123;</span><br><span class="line">                参数们</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="渲染页面：CourseDetail-vue-2"><a href="#渲染页面：CourseDetail-vue-2" class="headerlink" title="渲染页面：CourseDetail.vue"></a>渲染页面：CourseDetail.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">    <span class="keyword">let</span> 参数的数据 = <span class="built_in">this</span>.$route.query.参数的key 或者 <span class="built_in">this</span>.$route.params.参数的key</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="6）go"><a href="#6）go" class="headerlink" title="6）go"></a>6）go</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.go(-<span class="number">1</span>)  <span class="comment">//返回历史记录的前一页</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="仓库：vuex"><a href="#仓库：vuex" class="headerlink" title="仓库：vuex"></a>仓库：vuex</h2><h5 id="仓库配置：store-js"><a href="#仓库配置：store-js" class="headerlink" title="仓库配置：store.js"></a>仓库配置：store.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    <span class="comment">// 全局可以访问的变量 - 获取值</span></span><br><span class="line">    <span class="comment">// 组件内：this.$store.state.title</span></span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;主页&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 全局可以访问的方法 - 修改值</span></span><br><span class="line">    <span class="comment">// 组件内：this.$store.commit(&#x27;updateTitle&#x27;, &#x27;新值&#x27;)</span></span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        updateTitle (state, newValue) &#123;</span><br><span class="line">            state.title = newValue</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="前后台交互：axios"><a href="#前后台交互：axios" class="headerlink" title="前后台交互：axios"></a>前后台交互：axios</h2><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;: cd 项目目录</span><br><span class="line">&gt;: cnpm install axios --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="配置：main-js"><a href="#配置：main-js" class="headerlink" title="配置：main.js"></a>配置：main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.$axios = Axios;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="跨域问题-同源策略-：Access-Control-Allow-Origin-gt-CORS"><a href="#跨域问题-同源策略-：Access-Control-Allow-Origin-gt-CORS" class="headerlink" title="跨域问题(同源策略)：Access-Control-Allow-Origin =&gt; CORS"></a>跨域问题(同源策略)：Access-Control-Allow-Origin =&gt; CORS</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前提：前台向后跳请求数据</span><br><span class="line">1）服务器不一致 - ip</span><br><span class="line">2）应用不一致 - 端口</span><br><span class="line">3）协议不一致 - http &lt;-&gt; https</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="django解决跨域"><a href="#django解决跨域" class="headerlink" title="django解决跨域"></a>django解决跨域</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1）安装django-cors-headers模块</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）在settings.py中配置</span></span><br><span class="line"><span class="string"># 注册app</span></span><br><span class="line"><span class="string">INSTALLED_APPS = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">3）添加中间件</span></span><br><span class="line"><span class="string">MIDDLEWARE = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">4）允许跨域源</span></span><br><span class="line"><span class="string">CORS_ORIGIN_ALLOW_ALL = True</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="axios请求方式"><a href="#axios请求方式" class="headerlink" title="axios请求方式"></a>axios请求方式</h5><p>get</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">usr</span>: <span class="string">&#x27;zero&#x27;</span>,</span><br><span class="line">        <span class="attr">pwd</span>: <span class="string">&#x27;000&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$axios.get(<span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">usr</span>: <span class="string">&#x27;zero&#x27;</span>,</span><br><span class="line">        <span class="attr">pwd</span>: <span class="string">&#x27;000&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>post</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:8000/test/data/&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">username</span>: <span class="string">&#x27;owen&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">&#125;).error(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="前台操作Cookie：vue-cookie"><a href="#前台操作Cookie：vue-cookie" class="headerlink" title="前台操作Cookie：vue-cookie"></a>前台操作Cookie：vue-cookie</h2><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;: cd 项目目录</span><br><span class="line">&gt;: cnpm install vue-cookie --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="配置：main-js-1"><a href="#配置：main-js-1" class="headerlink" title="配置：main.js"></a>配置：main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">&#x27;vue-cookie&#x27;</span></span><br><span class="line">Vue.prototype.$cookie = cookie;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="使用：在任何方法中"><a href="#使用：在任何方法中" class="headerlink" title="使用：在任何方法中"></a>使用：在任何方法中</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// token是后台返回的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.set(key, value, time)</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.set(<span class="string">&#x27;token&#x27;</span>, token, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.get(key)</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>.$cookie.get(<span class="string">&#x27;token&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除cookie</span></span><br><span class="line"><span class="comment">// this.$cookie.delete(key)</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.delete(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> Vue仓库 </tag>
            
            <tag> Vue axios </tag>
            
            <tag> Vue路由 </tag>
            
            <tag> Django跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础</title>
      <link href="2019/08/12/Vue%20%E5%9F%BA%E7%A1%80/"/>
      <url>2019/08/12/Vue%20%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a><a href="https://cn.vuejs.org/">Vue</a></h1><h3 id="渐进式-JavaScript-框架"><a href="#渐进式-JavaScript-框架" class="headerlink" title="渐进式 JavaScript 框架"></a><em>渐进式 JavaScript 框架</em></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过对框架的了解与运用程度，来决定其在整个项目中的应用范围，最终可以独立以框架方式完成整个web前端项目</span><br></pre></td></tr></table></figure><h2 id="一、走进Vue"><a href="#一、走进Vue" class="headerlink" title="一、走进Vue"></a>一、走进Vue</h2><h4 id="1、what-–-什么是Vue"><a href="#1、what-–-什么是Vue" class="headerlink" title="1、what – 什么是Vue"></a>1、what – 什么是Vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以独立完成前后端分离式web项目的JavaScript框架</span><br></pre></td></tr></table></figure><h4 id="2、why-–-为什么要学习Vue"><a href="#2、why-–-为什么要学习Vue" class="headerlink" title="2、why – 为什么要学习Vue"></a>2、why – 为什么要学习Vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">三大主流框架之一：Angular React Vue</span><br><span class="line">先进的前端设计模式：MVVM</span><br><span class="line">可以完全脱离服务器端，以前端代码复用的方式渲染整个页面：组件化开发</span><br></pre></td></tr></table></figure><h4 id="3、special-–-特点"><a href="#3、special-–-特点" class="headerlink" title="3、special – 特点"></a>3、special – 特点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">单页面web应用</span><br><span class="line">数据驱动</span><br><span class="line">数据的双向绑定</span><br><span class="line">虚拟DOM</span><br></pre></td></tr></table></figure><h4 id="4、how-–-如何使用Vue"><a href="#4、how-–-如何使用Vue" class="headerlink" title="4、how – 如何使用Vue"></a>4、how – 如何使用Vue</h4><ul><li>开发版本：<a href="https://vuejs.org/js/vue.js">vue.js</a></li><li>生产版本：<a href="https://vuejs.org/js/vue.min.js">vue.min.js</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123; &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、Vue实例"><a href="#二、Vue实例" class="headerlink" title="二、Vue实例"></a>二、Vue实例</h2><h4 id="1、el：实例"><a href="#1、el：实例" class="headerlink" title="1、el：实例"></a>1、el：实例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 实例与页面挂载点一一对应</span></span><br><span class="line"><span class="comment">// 一个页面中可以出现多个实例对应多个挂载点</span></span><br><span class="line"><span class="comment">// 实例只操作挂载点内部内容</span></span><br></pre></td></tr></table></figure><h4 id="2、data：数据"><a href="#2、data：数据" class="headerlink" title="2、data：数据"></a>2、data：数据</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">    &#123;&#123; msg &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">msg</span>: <span class="string">&#x27;数据&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(app.$data.msg);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(app.msg);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- data为插件表达式中的变量提供数据 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- data中的数据可以通过Vue实例直接或间接访问--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、methods：方法"><a href="#3、methods：方法" class="headerlink" title="3、methods：方法"></a>3、methods：方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123; <span class="attribute">background-color</span>: orange &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;pClick&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-on:mouseover</span>=<span class="string">&quot;pOver&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            pClick () &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 点击测试</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            pOver () &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 悬浮测试</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 了解v-on:为事件绑定的指令 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- methods为事件提供实现体--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、computed：计算"><a href="#4、computed：计算" class="headerlink" title="4、computed：计算"></a>4、computed：计算</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;b&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123; c &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 一个变量依赖于多个变量</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">a</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">b</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">c</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// this代表该vue实例</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.a + <span class="built_in">this</span>.b;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、watch：监听"><a href="#5、watch：监听" class="headerlink" title="5、watch：监听"></a>5、watch：监听</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;ab&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123; a &#125;&#125;</span><br><span class="line">        &#123;&#123; b &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 多个变量依赖于一个变量</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">ab</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">a</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">b</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">ab</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 逻辑根据需求而定</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.a = <span class="built_in">this</span>.ab[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.b = <span class="built_in">this</span>.ab[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6、delimiters：分隔符"><a href="#6、delimiters：分隔符" class="headerlink" title="6、delimiters：分隔符"></a>6、delimiters：分隔符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">    $&#123; msg &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">msg</span>: <span class="string">&#x27;message&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">delimiters</span>: [<span class="string">&#x27;$&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>]</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、生命周期钩子"><a href="#三、生命周期钩子" class="headerlink" title="三、生命周期钩子"></a>三、<a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90">生命周期钩子</a></h2><ul><li>表示一个vue实例从创建到销毁的这个过程,将这个过程的一些时间节点赋予了对应的钩子函数</li><li>钩子函数: 满足特点条件被回调的方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;message&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    beforeCreate () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;实例刚刚创建&quot;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.msg</span><br><span class="line">                    </span><br><span class="line">    &#125;,</span><br><span class="line">    created () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;实例创建成功, data, methods已拥有&quot;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.msg);</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;页面已被vue实例渲染, data, methods已更新&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 拿到需求 =&gt; 确定钩子函数 =&gt; 解决需求的逻辑代码块</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="四、Vue指令"><a href="#四、Vue指令" class="headerlink" title="四、Vue指令"></a>四、Vue指令</h2><h4 id="1、文本相关指令"><a href="#1、文本相关指令" class="headerlink" title="1、文本相关指令"></a>1、文本相关指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 插值表达式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- eg:原文本会被msg替换 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span>原文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 可以解析带html标签的文本信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&#x27;msg&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-once控制的标签只能被赋值一次 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 指令: 出现在html标签中可以被vue解析处理的全局属性</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">msg</span>: <span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、斗篷指令"><a href="#2、斗篷指令" class="headerlink" title="2、斗篷指令"></a>2、斗篷指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-attr">[v-cloak]</span> &#123; <span class="attribute">display</span>: none; &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">    &#123;&#123; msg &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">msg</span>: <span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 避免页面闪烁--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、属性指令"><a href="#3、属性指令" class="headerlink" title="3、属性指令"></a>3、属性指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 给自定义全局属性绑定变量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:abc</span>=<span class="string">&quot;abc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 以原字符串形式绑定全局属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;&#x27;abc&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 单类名绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多类名绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;[c2, c3]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 类名状态绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;c4: true|false|var&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多类名状态绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;[&#123;c5: true&#125;, &#123;c6: flase&#125;]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 样式绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;div_style&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;width: &#x27;100px&#x27;, height: &#x27;100px&#x27;, backgroundColor: &#x27;blue&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">abc</span>: <span class="string">&quot;abc&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">c1</span>: <span class="string">&quot;p1&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">c2</span>: <span class="string">&quot;p2&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">c3</span>: <span class="string">&quot;p3&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">div_style</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">width</span>: <span class="string">&quot;200px&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">height</span>: <span class="string">&quot;200px&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">backgroundColor</span>: <span class="string">&quot;cyan&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-bind: 指令可以简写为 : --&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、事件指令"><a href="#4、事件指令" class="headerlink" title="4、事件指令"></a>4、事件指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- v-on: 指令 简写 @ --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 不传参事件绑定，但事件回调方法可以获取事件对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;fn&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ()可以传入具体实参 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;fn()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ()情况下，事件对象应该显式传入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;fn($event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、表单指令"><a href="#5、表单指令" class="headerlink" title="5、表单指令"></a>5、表单指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model针对于表单元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1、双向绑定：服务于文本输入框 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-model存储的值为输入框的value值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usr&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;in_val&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ps&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;in_val&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;in_val&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 2、单选框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 单选框是以name进行分组，同组中只能发生单选 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- v-model存储的值为单选框的value值 --&gt;</span></span><br><span class="line">            男：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;ra_val&quot;</span>&gt;</span></span><br><span class="line">            女：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;ra_val&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; ra_val &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 3、单一复选框 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-model存储的值为true|false --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 或者为自定义替换的值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;sin_val&#x27;</span> <span class="attr">true-value</span>=<span class="string">&quot;选中&quot;</span> <span class="attr">false-value</span>=<span class="string">&quot;未选中&quot;</span> /&gt;</span></span><br><span class="line">            &#123;&#123; sin_val &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 4、多复选框 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-model存储的值为存储值多复选框value的数组 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;喜好男的&quot;</span> <span class="attr">name</span>=<span class="string">&quot;cless&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;more_val&#x27;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;喜好女的&quot;</span> <span class="attr">name</span>=<span class="string">&quot;cless&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;more_val&#x27;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;不挑&quot;</span> <span class="attr">name</span>=<span class="string">&quot;cless&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;more_val&#x27;</span> /&gt;</span></span><br><span class="line">            &#123;&#123; more_val &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">in_val</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">// 默认值可以决定单选框默认选项</span></span></span><br><span class="line"><span class="javascript"><span class="attr">ra_val</span>: <span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">// 默认值为true，单一复选框为选中，反之false为不选中</span></span></span><br><span class="line"><span class="javascript"><span class="attr">sin_val</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">// 数组中存在的值对应的复选框默认为选中状态</span></span></span><br><span class="line"><span class="javascript"><span class="attr">more_val</span>: [<span class="string">&#x27;喜好女的&#x27;</span>,<span class="string">&#x27;不挑&#x27;</span>]</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6、条件指令"><a href="#6、条件指令" class="headerlink" title="6、条件指令"></a>6、条件指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toggle&quot;</span>&gt;</span>显隐切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-if --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box r&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-show --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box o&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.条件渲染的值为true|false --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.true代表标签显示方式渲染 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.false v-if不渲染到页面,v-show以display:none渲染到页面,但也不会显示 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-if v-else-if v-else 案例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeWrap(0)&quot;</span>&gt;</span>red<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeWrap(1)&quot;</span>&gt;</span>green<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeWrap(2)&quot;</span>&gt;</span>blue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- red页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap red&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;tag == 0&quot;</span> <span class="attr">key</span>=<span class="string">&quot;0&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- green页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap green&quot;</span> <span class="attr">v-else-if</span>=<span class="string">&quot;tag == 1&quot;</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- blue页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap blue&quot;</span> <span class="attr">v-else</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-if相关分支操作,在未显示情况下,是不会被渲染到页面中 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过key全局属性操作后,渲染过的分支会建立key对应的缓存,提高下一次渲染速度 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-show 案例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeMain(0)&quot;</span>&gt;</span>red<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeMain(1)&quot;</span>&gt;</span>green<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> @<span class="attr">mouseover</span>=<span class="string">&quot;changeMain(2)&quot;</span>&gt;</span>blue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- red页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main red&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;whoShow(0)&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- green页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main green&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;whoShow(1)&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- blue页面逻辑结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main blue&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;whoShow(2)&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">isShow</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">tag</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">flag</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">toggle () &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">changeWrap (num) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.tag = num;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">changeMain (num) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.flag num</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.flag = num;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript">whoShow (num) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.flag num</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.flag == num;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7、循环指令"><a href="#7、循环指令" class="headerlink" title="7、循环指令"></a>7、循环指令</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-for=&quot;item in items&quot; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历的对象: 数组[] 对象(字典)&#123;&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; list[0] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; list[1] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; list[2] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; list[3] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; list[4] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- n为遍历的元素值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;n in list&quot;</span>&gt;</span>&#123;&#123; n &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 一般列表渲染需要建立缓存 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列表渲染是循环,需要赋值变量给key,使用key需要v-bind:处理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-for变量数组[]时,接收两个值时,第一个为元素值,第二个为元素索引 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(n, i) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span>&gt;</span>value:&#123;&#123; n &#125;&#125; | index: &#123;&#123; i &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; dic[&#x27;name&#x27;] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; dic.age &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; dic.gender &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-for变量对象&#123;&#125;时,接收三个值时,第一个为元素值,第二个为元素键,第三个为元素索引 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(v, k, i) in dic&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;k&quot;</span>&gt;</span>value:&#123;&#123; v &#125;&#125; | key:&#123;&#123; k &#125;&#125; | index: &#123;&#123; i &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 遍历的嵌套 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(person, index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 21px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(v, k) in person&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;k&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float: left;&quot;</span>&gt;</span>&#123;&#123; k &#125;&#125; : &#123;&#123; v &#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">msg</span>: <span class="string">&quot;列表渲染&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">list</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span></span><br><span class="line"><span class="javascript"><span class="attr">dic</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">name</span>: <span class="string">&#x27;zero&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">age</span>: <span class="number">88888</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">gender</span>: <span class="string">&#x27;god&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">persons</span>: [</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>: <span class="string">&quot;zero&quot;</span>, <span class="attr">age</span>: <span class="number">8</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>: <span class="string">&quot;egon&quot;</span>, <span class="attr">age</span>: <span class="number">78</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>: <span class="string">&quot;liuXX&quot;</span>, <span class="attr">age</span>: <span class="number">77</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>: <span class="string">&quot;yXX&quot;</span>, <span class="attr">age</span>: <span class="number">38</span>&#125;</span></span><br><span class="line"><span class="javascript">]</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8、todolist案例"><a href="#8、todolist案例" class="headerlink" title="8、todolist案例"></a>8、todolist案例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitMsg&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(v, i) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;removeMsg(i)&quot;</span>&gt;</span>&#123;&#123; v &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;&#123; list &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">val</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">list</span>: []</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">submitMsg () &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (<span class="built_in">this</span>.val) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.list.push(<span class="built_in">this</span>.val);</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.val = <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">removeMsg</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.list.splice(index, <span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、组件"><a href="#五、组件" class="headerlink" title="五、组件"></a>五、组件</h2><ul><li>每一个组件都是一个vue实例</li><li>每个组件均具有自身的模板template，根组件的模板就是挂载点</li><li>每个组件模板只能拥有一个根标签</li><li>子组件的数据具有作用域，以达到组件的复用</li></ul><h4 id="1、根组件"><a href="#1、根组件" class="headerlink" title="1、根组件"></a>1、根组件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 通过new Vue创建的实例就是根组件(实例与组件一一对应,一个实例就是一个组件)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 每个组件组件均拥有模板,template</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 根组件的模板就是挂载点</span></span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span> : &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">msg</span>: <span class="string">&quot;根组件&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="comment">// 模板: 由&quot;&quot;包裹的html代码块,出现在组件的内部,赋值给组件的$template变量</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 显式书写模块,就会替换挂载点,但根组件必须拥有挂载点</span></span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&quot;&lt;div&gt;显式模板&lt;/div&gt;&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"><span class="comment">// app.$template</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、局部组件"><a href="#2、局部组件" class="headerlink" title="2、局部组件"></a>2、局部组件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">local-tag</span>&gt;</span><span class="tag">&lt;/<span class="name">local-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">local-tag</span>&gt;</span><span class="tag">&lt;/<span class="name">local-tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> localTag = &#123;</span></span><br><span class="line"><span class="javascript">        data () &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">count</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">&#x27;&lt;button @click=&quot;btnAction&quot;&gt;局部&#123;&#123; count &#125;&#125;&lt;/button&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            btnAction () &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.count ++</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;local-tag&#x27;</span>: localTag</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、全局组件"><a href="#3、全局组件" class="headerlink" title="3、全局组件"></a>3、全局组件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-tag</span>&gt;</span><span class="tag">&lt;/<span class="name">global-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-tag</span>&gt;</span><span class="tag">&lt;/<span class="name">global-tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&#x27;global-tag&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">data () &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">count</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&#x27;&lt;button @click=&quot;btnAction&quot;&gt;全局&#123;&#123; count &#125;&#125;&lt;/button&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">btnAction () &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.count ++</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、父组件传递数据给子组件"><a href="#4、父组件传递数据给子组件" class="headerlink" title="4、父组件传递数据给子组件"></a>4、父组件传递数据给子组件</h4><ul><li>通过绑定属性的方式进行数据传递</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-tag</span> <span class="attr">:sup_data1</span>=<span class="string">&#x27;sup_data1&#x27;</span> <span class="attr">:supData2</span>=<span class="string">&#x27;sup_data2&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">global-tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&#x27;global-tag&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">props</span>:[<span class="string">&#x27;sup_data1&#x27;</span>, <span class="string">&#x27;supdata2&#x27;</span>],</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&#123;&#123; sup_data1 &#125;&#125; &#123;&#123; supdata2 &#125;&#125;&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">sup_data1</span>: <span class="string">&#x27;数据1&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">sup_data2</span>: <span class="string">&#x27;数据2&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、子组件传递数据给父组件"><a href="#5、子组件传递数据给父组件" class="headerlink" title="5、子组件传递数据给父组件"></a>5、子组件传递数据给父组件</h4><ul><li>通过发送事件请求的方式进行数据传递</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">global-tag</span> @<span class="attr">send_action</span>=<span class="string">&#x27;receiveAction&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">global-tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&#x27;global-tag&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">data () &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">sub_data1</span>: <span class="string">&quot;数据1&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">sub_data2</span>: <span class="string">&#x27;数据2&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&#x27;&lt;div @click=&quot;clickAction&quot;&gt;发生&lt;/div&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">clickAction () &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$emit(<span class="string">&#x27;send_action&#x27;</span>, <span class="built_in">this</span>.sub_data1, <span class="built_in">this</span>.sub_data2)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">receiveAction (v1, v2) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(v1, v2)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6、父子组件实现todoList"><a href="#6、父子组件实现todoList" class="headerlink" title="6、父子组件实现todoList"></a>6、父子组件实现todoList</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;val&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitMsg&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;li v-for=&quot;(v, i) in list&quot; :key=&quot;i&quot; @click=&quot;removeMsg(i)&quot;&gt;&#123;&#123; v &#125;&#125;&lt;/li&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo-list</span> <span class="attr">v-for</span>=<span class="string">&quot;(v, i) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span> <span class="attr">:v</span>=<span class="string">&quot;v&quot;</span> <span class="attr">:i</span>=<span class="string">&quot;i&quot;</span> @<span class="attr">delect_action</span>=<span class="string">&quot;delect_action&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">Vue.component(<span class="string">&quot;todo-list&quot;</span>, &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">template</span>: <span class="string">&quot;&lt;li @click=&#x27;delect_action&#x27;&gt;&lt;span&gt;第&#123;&#123; i + 1 &#125;&#125;条: &lt;/span&gt;&lt;span&gt;&#123;&#123; v &#125;&#125;&lt;/span&gt;&lt;/li&gt;&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">props</span>: [<span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;i&#x27;</span>],</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">delect_action () &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$emit(<span class="string">&quot;delect_action&quot;</span>, <span class="built_in">this</span>.i)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">val</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">list</span>: []</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">submitMsg () &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 往list中添加input框中的value</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (<span class="built_in">this</span>.val) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.list.push(<span class="built_in">this</span>.val);</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.val = <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">delect_action</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.list.splice(index, <span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Vue-CLI-项目搭建"><a href="#六、Vue-CLI-项目搭建" class="headerlink" title="六、Vue-CLI 项目搭建"></a>六、Vue-CLI 项目搭建</h2><h4 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h4><ul><li>安装node</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官网下载安装包，傻瓜式安装：https://nodejs.org/zh-cn/</span><br></pre></td></tr></table></figure><ul><li>安装cnpm</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ul><li>安装脚手架</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g @vue/cli</span><br></pre></td></tr></table></figure><ul><li>清空缓存处理</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><h4 id="2、项目的创建"><a href="#2、项目的创建" class="headerlink" title="2、项目的创建"></a>2、项目的创建</h4><ul><li>创建项目</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue creat 项目名</span><br><span class="line"><span class="comment">// 要提前进入目标目录(项目应该创建在哪个目录下)</span></span><br><span class="line"><span class="comment">// 选择自定义方式创建项目，选取Router, Vuex插件</span></span><br></pre></td></tr></table></figure><ul><li>启动/停止项目</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve / ctrl+c</span><br><span class="line"><span class="comment">// 要提前进入项目根目录</span></span><br></pre></td></tr></table></figure><ul><li>打包项目</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br><span class="line"><span class="comment">// 要在项目根目录下进行打包操作</span></span><br></pre></td></tr></table></figure><h4 id="3、认识项目"><a href="#3、认识项目" class="headerlink" title="3、认识项目"></a>3、认识项目</h4><ul><li>项目目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">dist: 打包的项目目录(打包后会生成)</span><br><span class="line">node_modules: 项目依赖</span><br><span class="line"></span><br><span class="line">vue.config.js: 项目配置文件(没有可以自己新建)</span><br><span class="line"></span><br><span class="line">node_modules：项目依赖</span><br><span class="line"></span><br><span class="line">public：公用文件</span><br><span class="line">favicon.ico：页面标签图标</span><br><span class="line">index.html：项目的唯一页面(单页面)</span><br><span class="line"></span><br><span class="line">src：项目开发文件目录</span><br><span class="line">assets：静态资源</span><br><span class="line">css|js|img</span><br><span class="line">components：小组件</span><br><span class="line">*.vue</span><br><span class="line">views：视图组件</span><br><span class="line">*.vue</span><br><span class="line">App.vue：根组件</span><br><span class="line">main.js：主脚本文件</span><br><span class="line">router.js：路由脚本文件 - vue-router</span><br><span class="line">store.js：仓库脚本文件 - vuex</span><br><span class="line"></span><br><span class="line">*.xml|json|js：一系列配置文件</span><br><span class="line">README.md：使用说明</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>配置文件：vue.config.js</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports=&#123;</span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line"><span class="attr">port</span>: <span class="number">8888</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改端口,选做</span></span><br></pre></td></tr></table></figure><ul><li>main.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line"><span class="attr">router</span>: router,</span><br><span class="line"><span class="attr">store</span>: store,</span><br><span class="line"><span class="attr">render</span>: <span class="function"><span class="keyword">function</span> (<span class="params">h</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> h(App)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>.vue文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 模板区域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 逻辑代码区域</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 该语法和script绑定出现</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="comment">/* 样式区域 */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* scoped表示这里的样式只适用于组件内部, scoped与style绑定出现 */</span></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、项目功能"><a href="#4、项目功能" class="headerlink" title="4、项目功能"></a>4、项目功能</h4><ul><li>vue-router</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">    <span class="comment">// 路由的重定向</span></span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 一级路由, 在根组件中被渲染, 替换根组件的&lt;router-view/&gt;标签</span></span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/one-view&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;one&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;./views/OneView.vue&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 多级路由, 在根组件中被渲染, 替换根组件的&lt;router-view/&gt;标签</span></span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/one-view/one-detail&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;./views/OneDetail.vue&#x27;</span>),</span><br><span class="line">    <span class="comment">// 子路由, 在所属路由指向的组件中被渲染, 替换该组件(OneDetail)的&lt;router-view/&gt;标签</span></span><br><span class="line">    <span class="attr">children</span>: [&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;show&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;./components/OneShow.vue&#x27;</span>)</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- router-link渲染为a标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span> |</span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span> |</span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name: &#x27;one&#x27;&#125;&quot;</span>&gt;</span>One<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span> |</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 为路由渲染的组件占位 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.router-link-exact-active</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#42b983</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router的逻辑转跳</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&#x27;/one-view&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// router采用history方式访问上一级</span></span><br><span class="line"><span class="built_in">this</span>.$router.go(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>vuex</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在任何一个组件中,均可以通过this.$store.state.msg访问msg的数据</span></span><br><span class="line"><span class="comment">// state永远只能拥有一种状态值</span></span><br><span class="line"><span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;状态管理器&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 让state拥有多个状态值</span></span><br><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="comment">// 在一个一个组件中,均可以通过this.$store.commit(&#x27;setMsg&#x27;, new_msg)来修改state中的msg</span></span><br><span class="line">    <span class="function"><span class="title">setMsg</span>(<span class="params">state, new_msg</span>)</span> &#123;</span><br><span class="line">        state.msg = new_msg</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 让mutations拥有多个状态值</span></span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>vue-cookie</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装cookie的命令</span></span><br><span class="line"><span class="comment">// npm install vue-cookie --save</span></span><br><span class="line"><span class="comment">// 为项目配置全局vue-cookie</span></span><br><span class="line"><span class="keyword">import</span> VueCookie <span class="keyword">from</span> <span class="string">&#x27;vue-cookie&#x27;</span></span><br><span class="line"><span class="comment">// 将插件设置给Vue原型,作为全局的属性,在任何地方都可以通过this.$cookie进行访问</span></span><br><span class="line">Vue.prototype.$cookie = VueCookie</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 持久化存储val的值到cookie中</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.set(<span class="string">&#x27;val&#x27;</span>, <span class="built_in">this</span>.val)</span><br><span class="line"><span class="comment">// 获取cookie中val字段值</span></span><br><span class="line"><span class="built_in">this</span>.$cookie.get(<span class="string">&#x27;val&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>axios</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装 axios(ajax)的命令</span></span><br><span class="line"><span class="comment">// npm install axios--save</span></span><br><span class="line"><span class="comment">// 为项目配置全局axios</span></span><br><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.$ajax = Axios</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _this = <span class="built_in">this</span></span><br><span class="line"><span class="built_in">this</span>.$ajax(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1:5000/loginAction&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">usr</span>: <span class="built_in">this</span>.usr,</span><br><span class="line">        <span class="attr">ps</span>: <span class="built_in">this</span>.ps</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// this代表的是回调then这个方法的调用者(axios插件),也就是发生了this的重指向</span></span><br><span class="line">    <span class="comment">// 要更新页面的title变量,title属于vue实例</span></span><br><span class="line">    <span class="comment">// res为回调的对象,该对象的data属性就是后台返回的数据</span></span><br><span class="line">    _this.title = res.data</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.console.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用pycharm启动该文件模拟后台</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> CORS</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">CORS(app, supports_credentials=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;h1&gt;主页&lt;/h1&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/loginAction&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_action</span>():</span></span><br><span class="line">    <span class="comment"># print(request.args)</span></span><br><span class="line">    <span class="comment"># print(request.form)</span></span><br><span class="line">    <span class="comment"># print(request.values)</span></span><br><span class="line">    usr = request.args[<span class="string">&#x27;usr&#x27;</span>]</span><br><span class="line">    ps = request.args[<span class="string">&#x27;ps&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> usr != <span class="string">&#x27;abc&#x27;</span> <span class="keyword">or</span> ps != <span class="string">&#x27;123&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;login success&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
            <tag> 前端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django 解决跨域问题</title>
      <link href="2019/08/12/Django%20%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>2019/08/12/Django%20%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">通常情况下，A网页访问B服务器资源时，不满足以下三个条件其一就是跨域访问</span></span><br><span class="line"><span class="string">1. 协议不同</span></span><br><span class="line"><span class="string">2. 端口不同</span></span><br><span class="line"><span class="string">3. 主机不同</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="Django解决跨域"><a href="#Django解决跨域" class="headerlink" title="Django解决跨域"></a>Django解决跨域</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">安装django-cors-headers模块</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在settings.py中配置</span></span><br><span class="line"><span class="string"># 注册app</span></span><br><span class="line"><span class="string">INSTALLED_APPS = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string"># 添加中间件</span></span><br><span class="line"><span class="string">MIDDLEWARE = [</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string"># 允许跨域源</span></span><br><span class="line"><span class="string">CORS_ORIGIN_ALLOW_ALL = True</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django 安全组件 </tag>
            
            <tag> Django CORS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="2019/08/02/MarkDown%20%E8%AF%AD%E6%B3%95/"/>
      <url>2019/08/02/MarkDown%20%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>相比WYSIWYG编辑器</p><p><strong>优点：</strong><br> 1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br> 2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可</p><p><strong>缺点：</strong><br> 1、需要记一些语法（当然，是很简单。五分钟学会）。<br> 2、有些平台不支持Markdown编辑模式。</p><p>还好，简书是支持Markdown编辑模式的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开启方式：设置-&gt;默认编辑器-&gt;Markdown编辑器</span><br></pre></td></tr></table></figure><h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>在想要设置为标题的文字前面加#来表示<br> 一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><p>效果如下：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><hr><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><ul><li><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5></li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5></li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li><h5 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h5></li></ul><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><ul><li><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5></li></ul><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗的文字**</span><br><span class="line">*这是倾斜的文字*`</span><br><span class="line">***这是斜体加粗的文字***</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><strong>这是加粗的文字</strong><br> <em>这是倾斜的文字</em><br> <strong>这是斜体加粗的文字</strong><br> <del>这是加删除线的文字</del></p><hr><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br> n个…<br> 貌似可以一直加下去，但没神马卵用</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>效果如下：<br> 可以看到，显示效果是一样的。</p><hr><hr><hr><hr><h1 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h1><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 &#x27;&#x27;图片title&#x27;&#x27;)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</span><br><span class="line">u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/6860761-fd2f51090a890873.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/550/format/webp" alt="img"></p><p>blockchain</p><p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p><h1 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h1><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[简书](http://jianshu.com)</span><br><span class="line">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="https://www.jianshu.com/u/1f5ac0cf6a8b">简书</a><br> <a href="http://baidu.com/">百度</a></p><p>注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">示例</span><br><span class="line">&lt;a href=&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h1><ul><li><h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h5></li></ul><p>语法：<br> 无序列表用 - + * 任何一种都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li><p>列表内容</p></li><li><p>列表内容</p></li><li><p>列表内容</p></li><li><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h5></li></ul><p>语法：<br> 数字加点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.列表内容</span><br><span class="line">2.列表内容</span><br><span class="line">3.列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>1.列表内容<br> 2.列表内容<br> 3.列表内容</p><ul><li><h5 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h5></li></ul><p><strong>上一级和下一级之间敲三个空格即可</strong></p><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li>一级有序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级有序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><hr><h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|技能|排行</span><br><span class="line">--|:--:|--:</span><br><span class="line">刘备|哭|大哥</span><br><span class="line">关羽|打|二哥</span><br><span class="line">张飞|骂|三弟</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><h1 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h1><p>语法：<br> 单行代码：代码之间分别用一个反引号包起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`代码内容`</span><br></pre></td></tr></table></figure><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(```)</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">(```)</span><br></pre></td></tr></table></figure><blockquote><p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p></blockquote><p>示例：</p><p>单行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`create database hero;`</span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(```)</span><br><span class="line">    function fun()&#123;</span><br><span class="line">         echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br><span class="line">(```)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>单行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database hero;</span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">  echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure><h1 id="十、流程图"><a href="#十、流程图" class="headerlink" title="十、流程图"></a>十、流程图</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">​```flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;```</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/6860761-9d9524ba31047696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/751/format/webp" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> DarkDown基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件的Alpha、Beta、GM、OEM、LTS等版本的含义</title>
      <link href="2019/08/02/%E5%B8%B8%E8%AF%86%20%E8%BD%AF%E4%BB%B6%E7%9A%84Alpha%E3%80%81Beta%E3%80%81GM%E3%80%81OEM%E3%80%81LTS%E7%AD%89%E7%89%88%E6%9C%AC%E7%9A%84%E5%90%AB%E4%B9%89/"/>
      <url>2019/08/02/%E5%B8%B8%E8%AF%86%20%E8%BD%AF%E4%BB%B6%E7%9A%84Alpha%E3%80%81Beta%E3%80%81GM%E3%80%81OEM%E3%80%81LTS%E7%AD%89%E7%89%88%E6%9C%AC%E7%9A%84%E5%90%AB%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>常用版本号：<br>Alpha：软件或系统的内部测试版本，会有很多Bug，仅内部人员使用</p><p>Beta：软件或系统的测试版本，这一版本通常是在Alpha版本后，会有很多新功能，同时也有不少Bug</p><p>Gamma：软件或系统接近于成熟的版本，只需要做一些小的改进就能发行</p><p>微软常用的版本号：<br>RC（Release Candidate）：候选版本，这一版本不会增加新功能，多要进行Debug</p><p>GA（General Available）：正式发布版本，这个版本就是正式的版本</p><p>RTM（Release to Manufacture）：给工厂大量生产的压片版本，与正式版内容一样</p><p>OEM（Original Entrusted Manufacture）：给计算机厂商的出场销售版本，不零售只预装</p><p>RVL：号称是正式版，其实RVL根本不是版本的名称。它是中文版/英文版文档破解出来的</p><p>EVAL：而流通在网络上的EVAL版，与“评估版”类似，功能上和零售版没有区别</p><p>RTL（Retail）：零售版是真正的正式版，正式上架零售版</p><p>苹果常用的版本号：<br>GM（Gold Master）：正式版前最后一个测试版，其实也就是正式版</p><p>谷歌Chrome浏览器常用的版本号：<br>Chromium：开源版本，迭代速度极快，数小时就会有新版本，有很多新功能，等待验证后会移植到Chrome</p><p>Canary：迭代速度相对于Chromium版稍慢一些，功能非常新但未经过验证，同时崩溃的概率非常高</p><p>Dev：基于Chromium开发，每周出新功能，并且这些功能还有一定的筛选，另外还修复了一些Bug和不稳定因素</p><p>Beta：基于Dev版，Chrome会基于这一版本进行改进，一般按月更新，功能更加完善</p><p>Stable：稳定版本，也就是Chrome的正式版本，这一版本基于Beta版，已知Bug都被修复，一般情况下，更新比较慢</p><p>Ubuntu系统常用的版本号：<br>LTS（Long Term Support）：长期演进版，Ubuntu会对这一版本的支持时间更长。目前Java也在运用这种方式</p>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm与MySQL链接不通[08001]</title>
      <link href="2019/07/24/Pycharm%20MySQL%E4%B8%8EPycharm%E9%93%BE%E6%8E%A5%E4%B8%8D%E9%80%9A%5B08001%5D/"/>
      <url>2019/07/24/Pycharm%20MySQL%E4%B8%8EPycharm%E9%93%BE%E6%8E%A5%E4%B8%8D%E9%80%9A%5B08001%5D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://s2.ax1x.com/2019/07/24/eEOiqO.png" alt="错误展示"></p><blockquote><p>   报这个错误的原因是 mysql5.7的server是5.7，连接相关软件都是8.0的了，加密方式有所改变，导致连接不成功</p></blockquote><br><blockquote><p>   解决方案:<br>   在URL后面添加如下代码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?useUnicode=true&amp;characterEncoding=UTF-<span class="number">8</span>&amp;serverTimezone=UTC</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/24/eEOnzt.png" alt="解决问题"></p>]]></content>
      
      
      <categories>
          
          <category> Pycharm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pycharm 配置 </tag>
            
            <tag> MySQL 报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django Admin</title>
      <link href="2019/07/19/Django%20Admin/"/>
      <url>2019/07/19/Django%20Admin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是Django的admin？"><a href="#什么是Django的admin？" class="headerlink" title="什么是Django的admin？"></a>什么是Django的admin？</h1><blockquote><p>admin是django自带的管理后台系统</p></blockquote><h1 id="生成一个超级管理员"><a href="#生成一个超级管理员" class="headerlink" title="生成一个超级管理员"></a>生成一个超级管理员</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py createsuperuser</span><br></pre></td></tr></table></figure><h1 id="如何管理表的生成？"><a href="#如何管理表的生成？" class="headerlink" title="如何管理表的生成？"></a>如何管理表的生成？</h1><blockquote><p>需要进入有模型表的项目目录下<br>找到admin.py<br>此文件专门用来管理注册你创建模型，并负责模型创建成表格</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"><span class="comment"># 注册语句</span></span><br><span class="line">admin.site.register(models.UserInfo)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/07/17/ZL7Wi6.png" alt="Django-admin页面"></p><h1 id="Django-admin-中的字段类型"><a href="#Django-admin-中的字段类型" class="headerlink" title="Django-admin 中的字段类型"></a>Django-admin 中的字段类型</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">BooleanField(Field)</span><br><span class="line">    - 布尔值类型</span><br><span class="line">NullBooleanField(Field):</span><br><span class="line">    - 可以为空的布尔值</span><br><span class="line">CharField(Field)</span><br><span class="line">    - 字符类型</span><br><span class="line">    - 必须提供max_length参数， max_length表示字符长度</span><br><span class="line">TextField(Field)</span><br><span class="line">    - 文本类型</span><br><span class="line">EmailField(CharField)：</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供验证机制</span><br><span class="line">IPAddressField(Field)</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供验证 IPV4 机制</span><br><span class="line">GenericIPAddressField(Field)</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供验证 Ipv4和Ipv6</span><br><span class="line">    - 参数：</span><br><span class="line">        protocol，用于指定Ipv4或Ipv6， &#x27;both&#x27;,&quot;ipv4&quot;,&quot;ipv6&quot;</span><br><span class="line">        unpack_ipv4， 如果指定为True，则输入::ffff:192.0.2.1时候，可解析为192.0.2.1，开启刺功能，需要protocol=&quot;both&quot;</span><br><span class="line">URLField(CharField)</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供验证 URL</span><br><span class="line">SlugField(CharField)</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供验证支持 字母、数字、下划线、连接符（减号）</span><br><span class="line">CommaSeparatedIntegerField(CharField)</span><br><span class="line">    - 字符串类型，格式必须为逗号分割的数字</span><br><span class="line">UUIDField(Field)</span><br><span class="line">    - 字符串类型，Django Admin以及ModelForm中提供对UUID格式的验证</span><br><span class="line">FilePathField(Field)</span><br><span class="line">    - 字符串，Django Admin以及ModelForm中提供读取文件夹下文件的功能</span><br><span class="line">    - 参数：</span><br><span class="line">            path,                      文件夹路径</span><br><span class="line">            match=None,                正则匹配</span><br><span class="line">            recursive=False,           递归下面的文件夹</span><br><span class="line">            allow_files=True,          允许文件</span><br><span class="line">            allow_folders=False,       允许文件夹</span><br><span class="line">FileField(Field)</span><br><span class="line">    - 字符串，路径保存在数据库，文件上传到指定目录</span><br><span class="line">    - 参数：</span><br><span class="line">        upload_to = &quot;&quot;      上传文件的保存路径</span><br><span class="line">        storage = None      存储组件，默认django.core.files.storage.FileSystemStorage</span><br><span class="line">ImageField(FileField)</span><br><span class="line">    - 字符串，路径保存在数据库，文件上传到指定目录</span><br><span class="line">    - 参数：</span><br><span class="line">        upload_to = &quot;&quot;      上传文件的保存路径</span><br><span class="line">        storage = None      存储组件，默认django.core.files.storage.FileSystemStorage</span><br><span class="line">        width_field=None,   上传图片的高度保存的数据库字段名（字符串）</span><br><span class="line">        height_field=None   上传图片的宽度保存的数据库字段名（字符串）</span><br><span class="line">DateTimeField(DateField)</span><br><span class="line">    - 日期+时间格式 YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]</span><br><span class="line">DateField(DateTimeCheckMixin, Field)</span><br><span class="line">    - 日期格式      YYYY-MM-DD</span><br><span class="line">TimeField(DateTimeCheckMixin, Field)</span><br><span class="line">    - 时间格式      HH:MM[:ss[.uuuuuu]]</span><br><span class="line">DurationField(Field)</span><br><span class="line">    - 长整数，时间间隔，数据库中按照bigint存储，ORM中获取的值为datetime.timedelta类型</span><br><span class="line">FloatField(Field)</span><br><span class="line">    - 浮点型</span><br><span class="line">DecimalField(Field)</span><br><span class="line">    - 10进制小数</span><br><span class="line">    - 参数：</span><br><span class="line">        max_digits，小数总长度</span><br><span class="line">        decimal_places，小数位长度</span><br><span class="line">BinaryField(Field)</span><br><span class="line">    - 二进制类型</span><br></pre></td></tr></table></figure><h1 id="Django-admin-中的参数"><a href="#Django-admin-中的参数" class="headerlink" title="Django-admin 中的参数"></a>Django-admin 中的参数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">djagno-admin中的参数 ：</span><br><span class="line">verbose_name        Admin中显示的字段名称        </span><br><span class="line"></span><br><span class="line">blank               Admin中是否允许用户输入为空</span><br><span class="line">editable            Admin中是否可以编辑</span><br><span class="line">help_text           Admin中该字段的提示信息</span><br><span class="line"></span><br><span class="line">choices             Admin中显示选择框的内容，用不变动的数据放在内存中从而避免跨表操作</span><br><span class="line">choices = (</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line">)</span><br><span class="line">gender = models.IntegerField(choices=chocies)</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> name  gender （男女）</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 在django-admin中生效</span></span><br><span class="line">test1 = models.EmailField(max_length=<span class="number">32</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;邮箱2&#x27;</span>, blank=<span class="literal">True</span>, editable=<span class="literal">True</span>, help_text=<span class="string">&#x27;我是帮助信息&#x27;</span>)</span><br><span class="line">test2 = models.FileField(null=<span class="literal">True</span>)</span><br><span class="line">test3 = models.GenericIPAddressField()</span><br><span class="line">gender_choices = (</span><br><span class="line">     (<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">     (<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">gender = models.IntegerField(choices=gender_choices)</span><br><span class="line"><span class="keyword">from</span> django.core.validators <span class="keyword">import</span> RegexValidator</span><br><span class="line">test3 = models.CharField(</span><br><span class="line">    max_length=<span class="number">32</span>,</span><br><span class="line">    error_messages=&#123;</span><br><span class="line">        <span class="string">&#x27;c1&#x27;</span>: <span class="string">&#x27;优先错信息1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;c2&#x27;</span>: <span class="string">&#x27;优先错信息2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;c3&#x27;</span>: <span class="string">&#x27;优先错信息3&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    validators=[RegexValidator(regex=<span class="string">&#x27;root_\d+&#x27;</span>, message=<span class="string">&#x27;错误了&#x27;</span>, code=<span class="string">&#x27;c1&#x27;</span>)]</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><blockquote><p>以上的参数的限制作用只能在Django-admin界面中插入值是体现出<br>切勿以为用MySQL或是SQLLite在Pycharm的DataBases/Navicat中插入值 也能达到这种限制效果！！！</p></blockquote><p><img src="https://s2.ax1x.com/2019/07/17/ZL7osH.png" alt="Django-admin对插入值的限制"><br><img src="https://s2.ax1x.com/2019/07/17/ZL7osH.png" alt="Django-admin对插入值的限制"><br><img src="https://s2.ax1x.com/2019/07/17/ZL7bdI.png" alt="Django-admin对插入值的限制"></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django Admin </tag>
            
            <tag> Django 管理组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django 分页</title>
      <link href="2019/07/18/Django%20%E5%88%86%E9%A1%B5/"/>
      <url>2019/07/18/Django%20%E5%88%86%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><blockquote><p>为测试分页使用的数据库准备好300条测试数据</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">    name = <span class="string">&quot;Venti%s&quot;</span> %i</span><br><span class="line">    models.UserInfo.objects.create(name=name)</span><br></pre></td></tr></table></figure><blockquote><p>cur_page 当前页面序号</p></blockquote><h1 id="内置分页"><a href="#内置分页" class="headerlink" title="内置分页"></a>内置分页</h1><blockquote><p>前端通过 <a href="https://localhost:8000/?cur_page=666">https://localhost:8000/?cur_page=666</a> 分割获取到cur_paged的数值</p></blockquote><h2 id="处理含有非法分页数字的请求"><a href="#处理含有非法分页数字的请求" class="headerlink" title="处理含有非法分页数字的请求"></a>处理含有非法分页数字的请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 此时获取到的cur_page值为字符串形式</span></span><br><span class="line">        cur_page = request.GET.get(<span class="string">&#x27;cur_page&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将字符串形式的cur_page值转换成整形</span></span><br><span class="line">        cur_page = <span class="built_in">int</span>(cur_page)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果cur_page值在转换过程中发生了类型转换错误，说明原先的cur_page不合法，捕获异常，并设置默认值为1</span></span><br><span class="line">        cur_page = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取出所有用户信息，待会儿把他分页</span></span><br><span class="line">user_list = models.UserInfo.objects.<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure><h2 id="生成一个分页器对象"><a href="#生成一个分页器对象" class="headerlink" title="生成一个分页器对象"></a>生成一个分页器对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分页器对象  分页器类   待分页数据  每页数据数</span></span><br><span class="line">pagiantor =   Paginator(user_list,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h2 id="内置分页器的一些属性和参数"><a href="#内置分页器的一些属性和参数" class="headerlink" title="内置分页器的一些属性和参数"></a>内置分页器的一些属性和参数</h2><blockquote><p>per_page         每页显示条目的数量<br>count        数据的总个数<br>num_pages        总页数<br>page_range     总页数的索引范围<br>page    page对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试</span></span><br><span class="line"><span class="built_in">print</span>(paginator.per_page, paginator.count, paginator.num_pages)</span><br></pre></td></tr></table></figure><h2 id="分页后的页面对象"><a href="#分页后的页面对象" class="headerlink" title="分页后的页面对象"></a>分页后的页面对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">users = paginator.page(cur_page)</span><br></pre></td></tr></table></figure><h3 id="页面对象的一些属性或方法"><a href="#页面对象的一些属性或方法" class="headerlink" title="页面对象的一些属性或方法"></a>页面对象的一些属性或方法</h3><blockquote><h1 id="has-next-是否有下一页"><a href="#has-next-是否有下一页" class="headerlink" title="has_next              是否有下一页"></a>has_next              是否有下一页</h1><h1 id="next-page-number-下一页页码"><a href="#next-page-number-下一页页码" class="headerlink" title="next_page_number      下一页页码"></a>next_page_number      下一页页码</h1><h1 id="has-previous-是否有上一页"><a href="#has-previous-是否有上一页" class="headerlink" title="has_previous          是否有上一页"></a>has_previous          是否有上一页</h1><h1 id="previous-page-number-上一页页码"><a href="#previous-page-number-上一页页码" class="headerlink" title="previous_page_number  上一页页码"></a>previous_page_number  上一页页码</h1><h1 id="object-list-分页之后的数据列表"><a href="#object-list-分页之后的数据列表" class="headerlink" title="object_list           分页之后的数据列表"></a>object_list           分页之后的数据列表</h1><h1 id="number-当前页"><a href="#number-当前页" class="headerlink" title="number                当前页"></a>number                当前页</h1><h1 id="paginator-paginator对象"><a href="#paginator-paginator对象" class="headerlink" title="paginator             paginator对象"></a>paginator             paginator对象</h1></blockquote><h1 id="自定制分页类"><a href="#自定制分页类" class="headerlink" title="自定制分页类"></a>自定制分页类</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PageInfo</span>():</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,cur_page,total,per_page=<span class="number">10</span>,show_page=<span class="number">11</span></span>):</span></span><br><span class="line"><span class="comment"># 获取当前页</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">self.cur_page = <span class="built_in">int</span>(cur_page)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">self.cur_page = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">self.per_page = per_page</span><br><span class="line">self.show_page = show_page</span><br><span class="line"></span><br><span class="line"><span class="comment"># 总页数 / 每页页数    </span></span><br><span class="line"><span class="comment"># total / per_page = a ……b</span></span><br><span class="line">a , b = <span class="built_in">divmod</span>(total,per_page)</span><br><span class="line"><span class="keyword">if</span> b:</span><br><span class="line">self.total_page = a + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.total_page = a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_start</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">return</span> (self.cur_page - <span class="number">1</span>) * self.per_page</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_stop</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span>  self.cur_page * self.per_page</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">page</span>(<span class="params">self</span>):</span></span><br><span class="line">        half = <span class="built_in">int</span>((self.show_page ) / <span class="number">2</span>)</span><br><span class="line">        <span class="comment">### 总页数 &lt; show_page  == 11</span></span><br><span class="line">        <span class="keyword">if</span> self.total_page &lt; self.show_page:</span><br><span class="line">            begin = <span class="number">1</span></span><br><span class="line">            stop = self.total_page + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">### 总页数 &gt; show_page  == 11</span></span><br><span class="line">            <span class="keyword">if</span> self.cur_page - <span class="number">1</span> &lt; half:</span><br><span class="line">                begin = <span class="number">1</span></span><br><span class="line">                stop = self.show_page + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> self.cur_page + half &gt; self.total_page:</span><br><span class="line">                <span class="comment"># begin = self.cur_page  - half</span></span><br><span class="line">                begin = self.total_page - self.show_page + <span class="number">1</span></span><br><span class="line">                stop = self.total_page + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                begin = self.cur_page - half</span><br><span class="line">                stop = self.cur_page  + half + <span class="number">1</span></span><br><span class="line">        sli = []</span><br><span class="line">        <span class="keyword">if</span> self.cur_page == <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># s =  &quot;&lt;a  style=&#x27;display: inline-block; padding: 5px; margin: 5px;&#x27; href=&#x27;#&#x27;&gt;上一页&lt;/a&gt;&quot;</span></span><br><span class="line">            s =  <span class="string">&quot;&lt;li class=&#x27;disabled&#x27;&gt;&lt;a href=&#x27;#&#x27;&gt;上一页&lt;/a&gt;&lt;/li&gt;&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># s =  &quot;&lt;li&gt;&lt;a  style=&#x27;display: inline-block; padding: 5px; margin: 5px;&#x27; href=&#x27;/custom/?cur_page=%s&#x27;&gt;上一页&lt;/a&gt;&quot; %(self.cur_page - 1)</span></span><br><span class="line">            s =  <span class="string">&quot;&lt;li&gt;&lt;a   href=&#x27;/custom/?cur_page=%s&#x27;&gt;上一页&lt;/a&gt;&lt;/li&gt;&quot;</span> %(self.cur_page - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        sli.append(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(begin, stop):</span><br><span class="line">            <span class="keyword">if</span> num == self.cur_page:</span><br><span class="line">                <span class="comment"># s = &quot;&lt;a style=&#x27;display: inline-block; padding: 5px; margin: 5px;background-color: red&#x27; href=&#x27;/custom/?cur_page=%s&#x27;&gt;%s&lt;/a&gt;&quot; %(num, num)</span></span><br><span class="line">                s = <span class="string">&quot;&lt;li class=&#x27;active&#x27;&gt;&lt;a href=&#x27;/custom/?cur_page=%s&#x27;&gt;%s&lt;/a&gt;&lt;/li&gt;&quot;</span> %(num, num)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># s = &quot;&lt;a style=&#x27;display: inline-block; padding: 5px; margin: 5px;&#x27; href=&#x27;/custom/?cur_page=%s&#x27;&gt;%s&lt;/a&gt;&quot; %(num, num)</span></span><br><span class="line">                s = <span class="string">&quot;&lt;li&gt;&lt;a href=&#x27;/custom/?cur_page=%s&#x27;&gt;%s&lt;/a&gt;&lt;/li&gt;&quot;</span> %(num, num)</span><br><span class="line">            sli.append(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.cur_page == self.total_page:</span><br><span class="line">            <span class="comment"># s = &quot;&lt;a  style=&#x27;display: inline-block; padding: 5px; margin: 5px;&#x27; href=&#x27;#&#x27;&gt;下一页&lt;/a&gt;&quot;</span></span><br><span class="line">            s = <span class="string">&quot;&lt;li  class=&#x27;disabled&#x27;&gt;&lt;a  href=&#x27;#&#x27;&gt;下一页&lt;/a&gt;&lt;/li&gt;&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># s = &quot;&lt;a  style=&#x27;display: inline-block; padding: 5px; margin: 5px;&#x27; href=&#x27;/custom/?cur_page=%s&#x27;&gt;下一页&lt;/a&gt;&quot; % (self.cur_page + 1)</span></span><br><span class="line">            s = <span class="string">&quot;&lt;li&gt;&lt;a  href=&#x27;/custom/?cur_page=%s&#x27;&gt;下一页&lt;/a&gt;&lt;/li&gt;&quot;</span> % (self.cur_page + <span class="number">1</span>)</span><br><span class="line">        sli.append(s)</span><br><span class="line"></span><br><span class="line">        page_str = <span class="string">&quot; &quot;</span>.join(sli)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page_str</span><br></pre></td></tr></table></figure><h2 id="调用自定制分页类"><a href="#调用自定制分页类" class="headerlink" title="调用自定制分页类"></a>调用自定制分页类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 自定制分页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom</span>(<span class="params">request</span>):</span></span><br><span class="line"></span><br><span class="line">    cur_page = request.GET.get(<span class="string">&#x27;cur_page&#x27;</span>)  <span class="comment">## 字符串类型</span></span><br><span class="line">    total = models.UserInfo.objects.count() <span class="comment"># 301</span></span><br><span class="line">    pageinfo = PageInfo(cur_page, total)</span><br><span class="line">    <span class="comment"># cur_page    start    stop</span></span><br><span class="line">    <span class="comment">#     1         0       10</span></span><br><span class="line">    <span class="comment">#     2         10      20</span></span><br><span class="line">    <span class="comment">#     3         20      30</span></span><br><span class="line">    <span class="comment">#     n        (n-1)*per_page   n * per_page</span></span><br><span class="line">    start = pageinfo.get_start()</span><br><span class="line">    stop = pageinfo.get_stop()</span><br><span class="line">    user_list = models.UserInfo.objects.<span class="built_in">all</span>()[start:stop]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;custom.html&quot;</span>,&#123;<span class="string">&quot;user_list&quot;</span>:user_list, <span class="string">&quot;pageinfo&quot;</span>:pageinfo&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="前端代码-第一版"><a href="#前端代码-第一版" class="headerlink" title="前端代码 第一版"></a>前端代码 第一版</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for user in user_list.object_list %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; user.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;% if user_list.has_previous %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index/?cur_page=&#123;&#123; user_list.previous_page_number &#125;&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% for num in user_list.paginator.page_range %&#125;</span><br><span class="line">        &#123;% if num == user_list.number %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block; padding: 5px; margin: 5px;background-color: red&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/index/?cur_page=&#123;&#123; num &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; num &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block; padding: 5px; margin: 5px;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/index/?cur_page=&#123;&#123; num &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; num &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% if user_list.has_next %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/index/?cur_page=&#123;&#123; user_list.next_page_number &#125;&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="前端代码-第二版"><a href="#前端代码-第二版" class="headerlink" title="前端代码 第二版"></a>前端代码 第二版</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for user in user_list %&#125;</span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; user.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">&quot;Page navigation&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; pageinfo.page | safe &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django CSRF</title>
      <link href="2019/07/17/Django%20CSRF/"/>
      <url>2019/07/17/Django%20CSRF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是CSRF？"><a href="#什么是CSRF？" class="headerlink" title="什么是CSRF？"></a>什么是CSRF？</h1><p><img src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=407db661b412c8fca0fefe9f9d6af920/f603918fa0ec08fa63cbd7e654ee3d6d54fbdaac.jpg" alt="CSRF原理图"><br>攻击通过在授权用户访问的页面中包含链接或者脚本的方式工作。例如：<br>    一个网站用户Bob可能正在浏览聊天论坛，而同时另一个用户Alice也在此论坛中，并且后者刚刚发布了一个具有Bob银行链接的图片消息。设想一下，Alice编写了一个在Bob的银行站点上进行取款的form提交的链接，并将此链接作为图片src。如果Bob的银行在cookie中保存他的授权信息，并且此cookie没有过期，那么当Bob的浏览器尝试装载图片时将提交这个取款form和他的cookie，这样在没经Bob同意的情况下便授权了这次事务。CSRF是一种依赖web浏览器的、被混淆过的代理人攻击（deputy attack）。在上面银行示例中的代理人是Bob的web浏览器，它被混淆后误将Bob的授权直接交给了Alice使用。</p><h1 id="csrf-token-的全局强制认证"><a href="#csrf-token-的全局强制认证" class="headerlink" title="csrf_token 的全局强制认证"></a>csrf_token 的全局强制认证</h1><blockquote><p>若想要使用csrf_token<br>首先去settings里面把csrf中间件的启用打开</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="前端代码-（FORM表单）"><a href="#前端代码-（FORM表单）" class="headerlink" title="前端代码 （FORM表单）"></a>前端代码 （FORM表单）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- form表单下的认证实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">&#123;#  这个是接收令牌的位置   #&#125;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ajax下的认证实现--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">csrftoken = $(<span class="string">&#x27;input[name=&quot;csrfmiddlewaretoken&quot;]&#x27;</span>).val()</span></span><br><span class="line"><span class="javascript">$.ajax(&#123;</span></span><br><span class="line"><span class="javascript"><span class="attr">type</span>:<span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">url</span> : <span class="string">&#x27;/xxxx/&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="attr">data</span>: &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&#x27;xxxx&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">headers</span> : &#123;<span class="string">&#x27;X-CSRFToken&#x27;</span>: token&#125;,</span></span><br><span class="line"><span class="javascript"><span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登陆用到的验证装饰器（FBV）</span></span><br><span class="line"><span class="meta">@csrf_protect</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;login.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        account = request.POST.get(<span class="string">&#x27;account&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(account)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;ok&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="关闭全局csrf中间件后csrf-token的灵活使用"><a href="#关闭全局csrf中间件后csrf-token的灵活使用" class="headerlink" title="关闭全局csrf中间件后csrf-token的灵活使用"></a>关闭全局csrf中间件后csrf-token的灵活使用</h1><blockquote><p>csrf_token（白名单exempt）（黑名单protect）</p></blockquote><h2 id="导包语句"><a href="#导包语句" class="headerlink" title="导包语句"></a>导包语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> csrf_exempt,csrf_protect</span><br></pre></td></tr></table></figure><blockquote><p>csrf_exempt , csrf_protect 两个都是装饰器<br>protect 必须使用CBV应用装饰器 必须使用 method_decorator,把装饰器当作参数传进去。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> View</span><br><span class="line"><span class="keyword">from</span> django.utils.decorators <span class="keyword">import</span> method_decorator</span><br></pre></td></tr></table></figure><h2 id="csrf-exempt白名单-（CBV）"><a href="#csrf-exempt白名单-（CBV）" class="headerlink" title="csrf_exempt白名单 （CBV）"></a>csrf_exempt白名单 （CBV）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Login被添加进了白名单</span></span><br><span class="line"><span class="meta">@method_decorator(<span class="params">csrf_exempt</span>)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span>(<span class="params">View</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="csrf-protect白名单-（CBV）"><a href="#csrf-protect白名单-（CBV）" class="headerlink" title="csrf_protect白名单 （CBV）"></a>csrf_protect白名单 （CBV）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Login被添加进了黑名单        </span></span><br><span class="line"><span class="meta">@method_decorator(<span class="params">csrf_protect, name=<span class="string">&#x27;get&#x27;</span></span>)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span>(<span class="params">View</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django CSRF </tag>
            
            <tag> Django 安全组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django ORM详解</title>
      <link href="2019/07/17/Django%20ORM/"/>
      <url>2019/07/17/Django%20ORM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="模型表创建-models-py"><a href="#模型表创建-models-py" class="headerlink" title="模型表创建  models.py"></a>模型表创建  models.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boy</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">   name = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Girl</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">   nick = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Love</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">   b = models.ForeignKey(<span class="string">&quot;Boy&quot;</span>,null=<span class="literal">True</span>)</span><br><span class="line">   g = models.ForeignKey(<span class="string">&quot;Girl&quot;</span>,null=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>test4及以后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boy</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">   name = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br><span class="line">   g = models.ManyToManyField(<span class="string">&quot;Girl&quot;</span>,null=<span class="literal">True</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Girl</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">   nick = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserType</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    title = models.CharField(max_length=<span class="number">32</span>,  null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>, null=<span class="literal">True</span>)</span><br><span class="line">    age = models.CharField(max_length=<span class="number">32</span>, null=<span class="literal">True</span>)</span><br><span class="line">    ut = models.ForeignKey(UserType, null=<span class="literal">True</span>)  <span class="comment">### 加上一个ud_id</span></span><br></pre></td></tr></table></figure><h1 id="正向查询"><a href="#正向查询" class="headerlink" title="正向查询"></a>正向查询</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 正向查询-------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># 在UserInfo表里面查name=威哥的数据 =&gt; QuerySet对象</span></span><br><span class="line">    res = models.UserInfo.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;威哥&#x27;</span>).<span class="built_in">all</span>()</span><br><span class="line">    <span class="comment"># &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"></span><br><span class="line">    res = models.UserInfo.objects.<span class="built_in">all</span>()</span><br><span class="line">    <span class="comment"># &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"></span><br><span class="line">    res = models.UserInfo.objects.<span class="built_in">all</span>().values()</span><br><span class="line">    <span class="comment"># &lt;QuerySet [&#123;&#x27;id&#x27;: 1, &#x27;name&#x27;: &#x27;王伟&#x27;, &#x27;age&#x27;: &#x27;18&#x27;, &#x27;ut_id&#x27;: 1&#125;, &#123;&#x27;id&#x27;: 2, &#x27;name&#x27;: &#x27;威哥&#x27;, &#x27;age&#x27;: &#x27;19&#x27;, &#x27;ut_id&#x27;: 2&#125;, &#123;&#x27;id&#x27;: 3, &#x27;name&#x27;: &#x27;三上&#x27;, &#x27;age&#x27;: &#x27;20&#x27;, &#x27;ut_id&#x27;: 3&#125;]&gt;</span></span><br><span class="line"></span><br><span class="line">    res = models.UserInfo.objects.<span class="built_in">all</span>()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(item.name,item.age,item.ut_id)</span><br><span class="line">    <span class="comment"># 王伟 18 1</span></span><br><span class="line">    <span class="comment"># 威哥 19 2</span></span><br><span class="line">    <span class="comment"># 三上 20 3</span></span><br></pre></td></tr></table></figure><h1 id="反向查询"><a href="#反向查询" class="headerlink" title="反向查询"></a>反向查询</h1><h2 id="反向查询—-obj-userinfo-set-all"><a href="#反向查询—-obj-userinfo-set-all" class="headerlink" title="反向查询—-obj.userinfo_set.all()"></a>反向查询—-obj.userinfo_set.all()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据UserType查其下各部门的人</span></span><br><span class="line">res = models.UserType.objects.<span class="built_in">all</span>().values()</span><br><span class="line"><span class="comment"># &lt;QuerySet [&#123;&#x27;id&#x27;: 1, &#x27;title&#x27;: &#x27;技术部&#x27;&#125;, &#123;&#x27;id&#x27;: 2, &#x27;title&#x27;: &#x27;公关部&#x27;&#125;, &#123;&#x27;id&#x27;: 3, &#x27;title&#x27;: &#x27;宣传部&#x27;&#125;]&gt;</span></span><br><span class="line">res = models.UserType.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        obj.<span class="built_in">id</span>,</span><br><span class="line">        obj.title,</span><br><span class="line">        obj.userinfo_set.<span class="built_in">all</span>()</span><br><span class="line">    )</span><br><span class="line"><span class="comment"># 1 技术部 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"><span class="comment"># 2 公关部 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"><span class="comment"># 3 宣传部 &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br></pre></td></tr></table></figure><h2 id="反向查询——神奇的双下划线-跨表查询"><a href="#反向查询——神奇的双下划线-跨表查询" class="headerlink" title="反向查询——神奇的双下划线(跨表查询)"></a>反向查询——神奇的双下划线(跨表查询)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过UserInfo表的name查询Usertype表中对应的部门名称</span></span><br><span class="line">res = models.UserInfo.objects.values(<span class="string">&#x27;name&#x27;</span>, <span class="string">&quot;ut__title&quot;</span>)</span><br><span class="line"><span class="comment"># &lt;QuerySet [&#123;&#x27;name&#x27;: &#x27;王伟&#x27;, &#x27;ut__title&#x27;: &#x27;技术部&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;威哥&#x27;, &#x27;ut__title&#x27;: &#x27;公关部&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;三上&#x27;, &#x27;ut__title&#x27;: &#x27;宣传部&#x27;&#125;]&gt;</span></span><br></pre></td></tr></table></figure><h1 id="多对多查询的三种实现方式"><a href="#多对多查询的三种实现方式" class="headerlink" title="多对多查询的三种实现方式"></a>多对多查询的三种实现方式</h1><h2 id="1-1-查询和xx约会的女生"><a href="#1-1-查询和xx约会的女生" class="headerlink" title="1(1). 查询和xx约会的女生"></a>1(1). 查询和xx约会的女生</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Boy/Girl/Love三张表 测试多对多</span></span><br><span class="line">res = models.Boy.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;胡心亚&#x27;</span>).first() <span class="comment"># 获取胡心亚对象</span></span><br><span class="line">love_list = res.love_set.<span class="built_in">all</span>() <span class="comment"># 相亲记录</span></span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> love_list:</span><br><span class="line">    <span class="built_in">print</span>(obj.g.nick) <span class="comment"># Love的条目对象通过外键连接到Girl表找到对应的nickname</span></span><br></pre></td></tr></table></figure><h2 id="1-2-查询和xx约会的女生"><a href="#1-2-查询和xx约会的女生" class="headerlink" title="1(2). 查询和xx约会的女生"></a>1(2). 查询和xx约会的女生</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># b__name双下划线跨表找到的对端表字段属性</span></span><br><span class="line">res = models.Love.objects.<span class="built_in">filter</span>(b__name=<span class="string">&#x27;胡心亚&#x27;</span>).<span class="built_in">all</span>()</span><br><span class="line"><span class="comment"># &lt;QuerySet [&lt;Love: Love object&gt;, &lt;Love: Love object&gt;, &lt;Love: Love object&gt;]&gt;</span></span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">    <span class="built_in">print</span>(obj.g.nick)</span><br><span class="line">    <span class="comment"># 波多野结衣</span></span><br><span class="line">    <span class="comment"># 三上悠亚</span></span><br><span class="line">    <span class="comment"># 宇都宫紫苑</span></span><br><span class="line"><span class="comment"># print(res)</span></span><br></pre></td></tr></table></figure><h2 id="1-3-查询xx和约会的女生"><a href="#1-3-查询xx和约会的女生" class="headerlink" title="1(3).查询xx和约会的女生"></a>1(3).查询xx和约会的女生</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = models.Love.objects.<span class="built_in">filter</span>(b__name=<span class="string">&#x27;胡心亚&#x27;</span>).values(<span class="string">&#x27;g__nick&#x27;</span>)</span><br><span class="line"><span class="comment"># &lt;QuerySet [&#123;&#x27;g__nick&#x27;: &#x27;波多野结衣&#x27;&#125;, &#123;&#x27;g__nick&#x27;: &#x27;三上悠亚&#x27;&#125;, &#123;&#x27;g__nick&#x27;: &#x27;宇都宫紫苑&#x27;&#125;]&gt;</span></span><br></pre></td></tr></table></figure><h1 id="添加-（create与add）"><a href="#添加-（create与add）" class="headerlink" title="添加 （create与add）"></a>添加 （create与add）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test4</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 用第三张表(虚拟表)</span></span><br><span class="line">    <span class="comment"># 此时的表模型如下（不同之前的test表模型）</span></span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">Boy</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">         name = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br><span class="line">         g = models.ForeignKey(<span class="string">&quot;Girl&quot;</span>,null=<span class="literal">True</span>)</span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">Girl</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">         nick = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 改完表之后记得 makemigrations 和 migrate</span></span><br></pre></td></tr></table></figure><h2 id="create"><a href="#create" class="headerlink" title="create"></a>create</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1(1)添加数据---不选对象----------------------------------------------</span></span><br><span class="line"> models.Love.objects.create(b_id=<span class="number">1</span>,g_id=<span class="number">3</span>) <span class="comment"># 在Love表中添加一条数据</span></span><br></pre></td></tr></table></figure><h2 id="add"><a href="#add" class="headerlink" title="add"></a>add</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1(2)添加数据---选择对象-------------------------------------------------</span></span><br><span class="line"> obj = models.Boy.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;小何&#x27;</span>).first() <span class="comment"># 选出小何</span></span><br><span class="line"> obj.g.add(<span class="number">3</span>) <span class="comment"># app01_boy_g 内部成功添加了id=1,b_id=5,g_id=3的条目</span></span><br><span class="line"> obj.g.add(*[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="comment"># 重复添加 并不会重复出现在数据库中 ManyToManyField内部优化</span></span><br><span class="line"><span class="comment"># 153</span></span><br><span class="line"><span class="comment"># 251</span></span><br><span class="line"><span class="comment"># 352</span></span><br></pre></td></tr></table></figure><h1 id="重置-（set）"><a href="#重置-（set）" class="headerlink" title="重置 （set）"></a>重置 （set）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2 重置</span></span><br><span class="line">obj.g.<span class="built_in">set</span>([<span class="number">4</span>])</span><br><span class="line"><span class="comment"># 所有的条目消失，只有一个相亲女序号为4的出现在boy_g表中</span></span><br></pre></td></tr></table></figure><h1 id="查询-（filter）"><a href="#查询-（filter）" class="headerlink" title="查询 （filter）"></a>查询 （filter）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3 查询</span></span><br><span class="line"><span class="comment"># 把小何的所有相亲对象名字打印出来</span></span><br><span class="line"> obj = models.Boy.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;小何&#x27;</span>).first() <span class="comment"># 选出小何</span></span><br><span class="line"> res = obj.g.<span class="built_in">all</span>()</span><br><span class="line"> <span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment"># &lt;QuerySet [&lt;Girl: Girl object&gt;, &lt;Girl: Girl object&gt;, &lt;Girl: Girl object&gt;]&gt;</span></span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.nick)</span><br><span class="line">    <span class="comment"># 波多野结衣</span></span><br><span class="line">    <span class="comment"># 三上悠亚</span></span><br><span class="line">    <span class="comment"># 宇都宫紫苑</span></span><br></pre></td></tr></table></figure><h1 id="查询条件控制"><a href="#查询条件控制" class="headerlink" title="查询条件控制"></a>查询条件控制</h1><h2 id="in"><a href="#in" class="headerlink" title="in"></a>in</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test5</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 类比原生SQL语句的各查询组件</span></span><br><span class="line">    <span class="comment"># in 、not in、like、between……and……、limit、order by、group by</span></span><br><span class="line">    <span class="comment">## 1. in  id__in与神奇的双下划线是不一样的</span></span><br><span class="line">     res = models.UserInfo.objects.<span class="built_in">filter</span>(id__in=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">     <span class="built_in">print</span>(res)</span><br><span class="line">     &lt;QuerySet [&lt;UserInfo: UserInfo <span class="built_in">object</span>&gt;, &lt;UserInfo: UserInfo <span class="built_in">object</span>&gt;, &lt;UserInfo: UserInfo <span class="built_in">object</span>&gt;]&gt;</span><br><span class="line">     <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">         <span class="built_in">print</span>(obj.name)</span><br><span class="line">        <span class="comment"># 杰哥</span></span><br><span class="line">        <span class="comment"># 阿伟</span></span><br><span class="line">        <span class="comment"># 小何</span></span><br></pre></td></tr></table></figure><h2 id="not-in-exclude"><a href="#not-in-exclude" class="headerlink" title="not in  exclude"></a>not in  exclude</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 2. not in    exclude vt. 排除；</span></span><br><span class="line"> res = models.UserInfo.objects.exclude(id__in=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"> <span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment"># &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.name)</span><br><span class="line"><span class="comment"># 伟伟</span></span><br><span class="line"><span class="comment"># 尖尖角</span></span><br><span class="line"><span class="comment"># 佳伟</span></span><br><span class="line"><span class="comment"># 嘎嘎</span></span><br></pre></td></tr></table></figure><h2 id="like-startswith-istartswith-endswith-iendswith-contains"><a href="#like-startswith-istartswith-endswith-iendswith-contains" class="headerlink" title="like   startswith  istartswith  endswith  iendswith contains"></a>like   startswith  istartswith  endswith  iendswith contains</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 3 like</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(name__startswith=<span class="string">&quot;V&quot;</span>)</span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.name)</span><br><span class="line">    <span class="comment"># Venti</span></span><br><span class="line"><span class="comment">### startswith： 以 某单词开头</span></span><br><span class="line"><span class="comment">### istartswith : ignore (忽略)  以 某单词开头 忽略大小写 </span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(name__istartswith=<span class="string">&quot;v&quot;</span>)</span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.name)</span><br><span class="line"><span class="comment">#     Venti</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## endswith : 以 某个单词结尾</span></span><br><span class="line"><span class="comment">## iendswith:  ignore (忽略)  以 某单词结尾 忽略大小写</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(name__endswith=<span class="string">&#x27;ze&#x27;</span>)</span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(name__iendswith=<span class="string">&#x27;ze&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">### contains : 包含某一个单词</span></span><br><span class="line"><span class="comment">### icontains: 包含某一个单词 不区分大小写</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(name__contains=<span class="string">&#x27;ze&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="xx-range"><a href="#xx-range" class="headerlink" title="xx__range"></a>xx__range</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 4. between.. and..</span></span><br><span class="line"><span class="comment"># res = models.UserInfo.objects.filter(id__range=[1,5])</span></span><br><span class="line"><span class="comment"># for obj in res:</span></span><br><span class="line"><span class="comment">#     print(obj.name)</span></span><br><span class="line">    <span class="comment"># 杰哥</span></span><br><span class="line">    <span class="comment"># 阿伟</span></span><br><span class="line">    <span class="comment"># 小何</span></span><br><span class="line">    <span class="comment"># 伟伟</span></span><br><span class="line">    <span class="comment"># 尖尖角</span></span><br></pre></td></tr></table></figure><h2 id="limit-直接用切片符"><a href="#limit-直接用切片符" class="headerlink" title="limit (直接用切片符)"></a>limit (直接用切片符)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 5. limit 10, 20</span></span><br><span class="line"><span class="comment"># models.UserInfo.objects.all()[开始位置:结束位置]</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">all</span>()[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line"><span class="comment"># for obj in res:</span></span><br><span class="line"><span class="comment">#     print(obj.name)</span></span><br><span class="line">    <span class="comment"># 阿伟</span></span><br><span class="line">    <span class="comment"># 小何</span></span><br><span class="line">    <span class="comment"># 伟伟</span></span><br><span class="line">    <span class="comment"># 尖尖角</span></span><br><span class="line">    <span class="comment"># 佳伟</span></span><br><span class="line">    <span class="comment"># 嘎嘎</span></span><br><span class="line">    <span class="comment"># Venti</span></span><br></pre></td></tr></table></figure><h2 id="order-by-asc-desc"><a href="#order-by-asc-desc" class="headerlink" title="order by  (asc/desc)"></a>order by  (asc/desc)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 6. order by age asc, name desc</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">all</span>().order_by(<span class="string">&#x27;id&#x27;</span>) <span class="comment">## 默认升序</span></span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.<span class="built_in">id</span>)</span><br><span class="line">    <span class="comment"># 1</span></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    <span class="comment"># 3</span></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    <span class="comment"># 5</span></span><br><span class="line">    <span class="comment"># 6</span></span><br><span class="line">    <span class="comment"># 7</span></span><br><span class="line">    <span class="comment"># 8</span></span><br><span class="line"><span class="comment">### 前面加一个 ‘-’ 代表 降序</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">all</span>().order_by(<span class="string">&#x27;-id&#x27;</span>,<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.<span class="built_in">id</span>)</span><br><span class="line">    <span class="comment"># 8</span></span><br><span class="line">    <span class="comment"># 7</span></span><br><span class="line">    <span class="comment"># 6</span></span><br><span class="line">    <span class="comment"># 5</span></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    <span class="comment"># 3</span></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    <span class="comment"># 1</span></span><br><span class="line"><span class="comment"># print(res.query)</span></span><br></pre></td></tr></table></figure><h2 id="having"><a href="#having" class="headerlink" title="having"></a>having</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># having是嵌套查询的限制条件，直接在循环嵌套后补添加filter()即可</span></span><br><span class="line">res = models.UserInfo.objects.values(<span class="string">&#x27;name&#x27;</span>).annotate(xx=Count(<span class="string">&#x27;id&#x27;</span>)).<span class="built_in">filter</span>(xx_lt=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 7. group by</span></span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Count, Max, Min, Sum</span><br><span class="line"><span class="comment"># annotate vi. 注释</span></span><br><span class="line"><span class="comment"># values 相当于 group by</span></span><br><span class="line"> res = models.UserInfo.objects.values(<span class="string">&#x27;name&#x27;</span>).annotate(bieming=Count(<span class="string">&#x27;id&#x27;</span>))</span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj)</span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;Venti&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;伟伟&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;佳伟&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;嘎嘎&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;小何&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;尖尖角&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;杰哥&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;阿伟&#x27;, &#x27;bieming&#x27;: 1&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(res.query) <span class="comment"># 查看SQL原语</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SELECT &quot;app01_userinfo&quot;.&quot;name&quot;, COUNT(&quot;app01_userinfo&quot;.&quot;id&quot;) AS &quot;bieming&quot;</span></span><br><span class="line"><span class="comment"># FROM &quot;app01_userinfo&quot;</span></span><br><span class="line"><span class="comment"># GROUP BY &quot;app01_userinfo&quot;.&quot;name&quot;</span></span><br></pre></td></tr></table></figure><h2 id="only"><a href="#only" class="headerlink" title="only"></a>only</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### 8. only: 只取某一个列的值</span></span><br><span class="line"><span class="comment">## SELECT &quot;app01_userinfo&quot;.&quot;id&quot;, &quot;app01_userinfo&quot;.&quot;name&quot;, &quot;app01_userinfo&quot;.&quot;age&quot; FROM &quot;app01_userinfo&quot;</span></span><br><span class="line"> res = models.UserInfo.objects.only(<span class="string">&#x27;name&#x27;</span>,  <span class="string">&#x27;age&#x27;</span>).<span class="built_in">all</span>()</span><br><span class="line"> <span class="built_in">print</span>(res) <span class="comment">## &lt;QuerySet [&lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;, &lt;UserInfo: UserInfo object&gt;]&gt;</span></span><br><span class="line"> <span class="keyword">for</span> obj <span class="keyword">in</span> res:</span><br><span class="line">     <span class="built_in">print</span>(obj.name,obj.age)</span><br><span class="line">    <span class="comment"># 杰哥 18</span></span><br><span class="line">    <span class="comment"># 阿伟 19</span></span><br><span class="line">    <span class="comment"># 小何 20</span></span><br><span class="line">    <span class="comment"># 伟伟 22</span></span><br><span class="line">    <span class="comment"># 尖尖角 16</span></span><br><span class="line">    <span class="comment"># 佳伟 22</span></span><br><span class="line">    <span class="comment"># 嘎嘎 33</span></span><br><span class="line">    <span class="comment"># Venti 44</span></span><br></pre></td></tr></table></figure><h2 id="defer-排除"><a href="#defer-排除" class="headerlink" title="defer (排除)"></a>defer (排除)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 9. defer: 除了这几列之外的所有列的值 deferred v. 推迟</span></span><br><span class="line"><span class="comment">### SELECT &quot;app01_userinfo&quot;.&quot;id&quot;, &quot;app01_userinfo&quot;.&quot;ut_id&quot; FROM &quot;app01_userinfo&quot;</span></span><br><span class="line"> res = models.UserInfo.objects.defer(<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>).<span class="built_in">all</span>()</span><br><span class="line"> <span class="built_in">print</span>(res.query)</span><br></pre></td></tr></table></figure><h2 id="using-（数据库选择）"><a href="#using-（数据库选择）" class="headerlink" title="using （数据库选择）"></a>using （数据库选择）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 10.using: 想要使用哪个数据库， 就将这个数据库的配置名称写到using中</span></span><br><span class="line"> models.UserInfo.objects.<span class="built_in">all</span>().using(<span class="string">&quot;xxxx&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="count（数据条目统计）"><a href="#count（数据条目统计）" class="headerlink" title="count（数据条目统计）"></a>count（数据条目统计）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 11. 表中总共多少条数据</span></span><br><span class="line"> res = models.UserInfo.objects.count()</span><br><span class="line"><span class="comment"># print(res)</span></span><br></pre></td></tr></table></figure><h2 id="first"><a href="#first" class="headerlink" title="first"></a>first</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 12. 第一条数据</span></span><br><span class="line"> res = models.UserInfo.objects.first()</span><br><span class="line"><span class="comment"># print(res)</span></span><br></pre></td></tr></table></figure><h2 id="last"><a href="#last" class="headerlink" title="last"></a>last</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 13.最后一条数据</span></span><br><span class="line"> res = models.UserInfo.objects.last()</span><br></pre></td></tr></table></figure><h2 id="gt-lt-gte-lte"><a href="#gt-lt-gte-lte" class="headerlink" title="gt lt gte lte"></a>gt lt gte lte</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 14.gt lt</span></span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(id__gt=<span class="number">3</span>)</span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(id__gte=<span class="number">3</span>)</span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(id__lt=<span class="number">3</span>)</span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>(id__lte=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="and"><a href="#and" class="headerlink" title="and"></a>and</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 15. and操作</span></span><br><span class="line"> res =  models.UserInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>, name=<span class="string">&#x27;zekai&#x27;</span>)</span><br><span class="line"><span class="comment"># print(res.query)</span></span><br></pre></td></tr></table></figure><h2 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 16.or操作</span></span><br><span class="line"> <span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q</span><br><span class="line"> res = models.UserInfo.objects.<span class="built_in">filter</span>( Q(Q(<span class="built_in">id</span>=<span class="number">1</span>) | Q(name=<span class="string">&#x27;zekai&#x27;</span>)) &amp; Q(name=<span class="string">&#x27;xxxx&#x27;</span>)  )</span><br><span class="line"><span class="comment"># print(res.query)</span></span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 17. 在原来的基础上更新值 全选加减乘除乘方</span></span><br><span class="line"> <span class="keyword">from</span> django.db.models <span class="keyword">import</span> F</span><br><span class="line"> models.UserInfo.objects.update(age = F(<span class="string">&#x27;age&#x27;</span>) + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="原生SQL-connection"><a href="#原生SQL-connection" class="headerlink" title="原生SQL connection"></a>原生SQL connection</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 18。原生sql</span></span><br><span class="line"> <span class="keyword">from</span> django.db <span class="keyword">import</span>  connection</span><br><span class="line"> cursor = connection.cursor()</span><br><span class="line"> cursor.execute(<span class="string">&quot;select * from app01_userinfo where id=%s&quot;</span>, [<span class="number">1</span>,])</span><br><span class="line"> res = cursor.fetchall()</span><br><span class="line"> res = cursor.fetchone()</span><br><span class="line"><span class="comment"># # print(res)</span></span><br></pre></td></tr></table></figure><h2 id="原生SQL-raw"><a href="#原生SQL-raw" class="headerlink" title="原生SQL raw"></a>原生SQL raw</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 19. 原生sql</span></span><br><span class="line"> models.UserInfo.objects.raw(<span class="string">&#x27;select * from app01_userinfo&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="删除-delete"><a href="#删除-delete" class="headerlink" title="删除 delete"></a>删除 delete</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 20. 删除</span></span><br><span class="line"> models.UserType.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">2</span>).delete()</span><br><span class="line"><span class="keyword">return</span> HttpResponse(<span class="string">&#x27;ok&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="联级删除"><a href="#联级删除" class="headerlink" title="联级删除"></a>联级删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ps:</span><br><span class="line">级联删除</span><br><span class="line">ForeignKey（on_delete=models.CASCADE）</span><br><span class="line"></span><br><span class="line">CASCADE： 级联删除  默认</span><br><span class="line">SET_NULL: 取消级联删除</span><br></pre></td></tr></table></figure><h1 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h1><p><img src="https://s2.ax1x.com/2019/07/17/ZLNJH0.png" alt="OneToOne"></p><blockquote><p>UserInfo是母表（不可在被分割）<br>Salary是子表（可被分割）</p></blockquote><h2 id="正向查询-（子表查母表）"><a href="#正向查询-（子表查母表）" class="headerlink" title="正向查询 （子表查母表）"></a>正向查询 （子表查母表）</h2><blockquote><p>对应不同的Django版本有不同的写法<br>1.11.22:   res.us.name    ——对象.外键.字段名<br>1.11.10:   res.母表名称小写.name  —– 对象.母表名称小写.字段名<br>.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = models.UserInfo.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;Venti&#x27;</span>).first()</span><br><span class="line"><span class="built_in">print</span>(res.salary.money)</span><br></pre></td></tr></table></figure><h2 id="反向查询-（母表查子表）"><a href="#反向查询-（母表查子表）" class="headerlink" title="反向查询 （母表查子表）"></a>反向查询 （母表查子表）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = models.UserInfo.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;Venti&#x27;</span>).first()</span><br><span class="line"><span class="built_in">print</span>(res.salary.money)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django ORM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django 连接数据库</title>
      <link href="2019/07/15/Django%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2019/07/15/Django%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="django连接MySQL-（两个关键步骤）"><a href="#django连接MySQL-（两个关键步骤）" class="headerlink" title="django连接MySQL(******)（两个关键步骤）"></a>django连接MySQL(******)（两个关键步骤）</h1><h2 id="1-修改配置文件中DATABASES变量指代的配置"><a href="#1-修改配置文件中DATABASES变量指代的配置" class="headerlink" title="1.修改配置文件中DATABASES变量指代的配置"></a>1.修改配置文件中DATABASES变量指代的配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">将默认的数据库引擎由默认的sqlite改为mysql</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="comment"># &#x27;default&#x27;: &#123;</span></span><br><span class="line">    <span class="comment">#     &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;NAME&#x27;: os.path.join(BASE_DIR, &#x27;db.sqlite3&#x27;),</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;stu_oa&#x27;</span>,    <span class="comment">## 数据库名称</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;123&#x27;</span>,    <span class="comment">## 安装 mysql 数据库时，输入的 root 用户的密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/15/5d2c22965652630355.png" alt="数据库配置"></p><h2 id="2-去-init-py-可以是项目（project）下的也可以是应用（app）下的-文件中"><a href="#2-去-init-py-可以是项目（project）下的也可以是应用（app）下的-文件中" class="headerlink" title="2.去__init__.py(可以是项目（project）下的也可以是应用（app）下的)文件中"></a>2.去__init__.py(可以是项目（project）下的也可以是应用（app）下的)文件中</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()  告诉django用pymysql模块去操作数据库</span><br></pre></td></tr></table></figure><h1 id="django小白必会三板斧"><a href="#django小白必会三板斧" class="headerlink" title="django小白必会三板斧"></a>django小白必会三板斧</h1><blockquote><p>​        HttpReponse     返回字符串<br>​        render            渲染页面<br>​        redirect        重定向<br>​        ps:django返回给前端的数据都是HttpResponse对象</p></blockquote><h1 id="ORM模型层"><a href="#ORM模型层" class="headerlink" title="ORM模型层"></a>ORM模型层</h1><h2 id="对象关系映射"><a href="#对象关系映射" class="headerlink" title="对象关系映射"></a>对象关系映射</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="comment"># 主键字段可以不写，django会自动帮你创建一个字段名为id的主键字段</span></span><br><span class="line">uid = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># name(varchar(32))</span></span><br><span class="line">name = models.CharField(max_length=<span class="number">32</span>)  django默认没有类对应char类型</span><br></pre></td></tr></table></figure><h2 id="数据库迁移命令"><a href="#数据库迁移命令" class="headerlink" title="数据库迁移命令(******)"></a>数据库迁移命令(******)</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py makemigrations  将数据库更改记录添加到小本本上(对应应用下migrations文件夹)</span><br><span class="line">python3 manage.py migrate  将更改同步到数据库(真正的操作数据库)</span><br></pre></td></tr></table></figure><p>ps：上述命令记得滚瓜烂熟之后可以使用pycharm提供的简便的命令行操作</p><h2 id="模型表字段的增删改查"><a href="#模型表字段的增删改查" class="headerlink" title="模型表字段的增删改查"></a>模型表字段的增删改查</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><blockquote><p>​        表没有的数据情况下，直接执行数据库迁移命令即可<br>​        有数据的情况下，新增的字段需要有个默认值(default=’默认值’,null=True),然后执行数据库迁移命令</p></blockquote><h3 id="删-一般情况下是不会删除的"><a href="#删-一般情况下是不会删除的" class="headerlink" title="删(一般情况下是不会删除的)"></a>删(一般情况下是不会删除的)</h3><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>执行数据库迁移命令<br>强调:只要你修改了与数据库表相关的记录，你就必须得从头开始执行数据库迁移命令</p><h2 id="模型表数据的增删改查"><a href="#模型表数据的增删改查" class="headerlink" title="模型表数据的增删改查"></a>模型表数据的增删改查</h2><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">res = models.User.objects.<span class="built_in">all</span>()  获取user表中所有的数据，返回的是一个queryset对象(你就把它当成是一个列表里面放的是一个个的数据对象)</span><br><span class="line"><span class="built_in">print</span>(res.query)  查看当前queryset对象内部对应的sql语句</span><br><span class="line">注意:只有queryset对象才可以点query方法</span><br><span class="line"></span><br><span class="line">res = models.User.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;jason&#x27;</span>)  去数据库将name字段对应的值为jason所有的数据都出来</span><br><span class="line"><span class="built_in">filter</span>返回的结果是一个queryset对象</span><br><span class="line">ps:queryset对象支持索引取值，但是它不支持负数索引(******)</span><br><span class="line"></span><br><span class="line">res = models.User.objects.get(name=<span class="string">&#x27;jason&#x27;</span>)</span><br><span class="line">返回的结果就是数据对象本身，这个方法当条件不存在的情况直接报错</span><br></pre></td></tr></table></figure><h3 id="增-1"><a href="#增-1" class="headerlink" title="增"></a>增</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user_obj = models.User.objects.create(name=<span class="string">&#x27;jason&#x27;</span>)</span><br><span class="line">create方法有一个返回值，就是当前新增的数据对象本身</span><br><span class="line">user_obj = models.USER(name=<span class="string">&#x27;jason&#x27;</span>)</span><br><span class="line">user_obj.save()</span><br></pre></td></tr></table></figure><h3 id="改-是基于已经有的数据的基础之上继续修改"><a href="#改-是基于已经有的数据的基础之上继续修改" class="headerlink" title="改(是基于已经有的数据的基础之上继续修改)"></a>改(是基于已经有的数据的基础之上继续修改)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user_obj = models.User.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;jason&#x27;</span>).first()</span><br><span class="line">user_obj.name = <span class="string">&#x27;egon&#x27;</span></span><br><span class="line">user_obj.save()</span><br><span class="line">user_list = models.User.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;jason&#x27;</span>).update(name=<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line">调用queryset封装的方法，该方法是一个批量操作，会将queryset内所有的数据对象全部修改</span><br></pre></td></tr></table></figure><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.User.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;jason&#x27;</span>).delete()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django数据库操作 </tag>
            
            <tag> DjangoORM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django初识</title>
      <link href="2019/07/15/Django%20%E5%88%9D%E8%AF%86/"/>
      <url>2019/07/15/Django%20%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装django之前你需要注意的几个事项"><a href="#安装django之前你需要注意的几个事项" class="headerlink" title="安装django之前你需要注意的几个事项"></a>安装django之前你需要注意的几个事项</h1><blockquote><p>​        1.版本问题 建议使用1.11.11左右的版本(******)<br>​        2.计算机名称不能有中文<br>​        3.项目名不要用中文<br>​        4.一个pycharm窗口只有一个项目</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install django==<span class="number">1.11</span>.<span class="number">11</span></span><br></pre></td></tr></table></figure><h2 id="命令行创建"><a href="#命令行创建" class="headerlink" title="命令行创建"></a>命令行创建</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django<span class="literal">-admin</span> startproject 项目名</span><br></pre></td></tr></table></figure><h2 id="命令行创建应用"><a href="#命令行创建应用" class="headerlink" title="命令行创建应用"></a>命令行创建应用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py startapp 应用名</span><br></pre></td></tr></table></figure><h2 id="命令行启动django项目"><a href="#命令行启动django项目" class="headerlink" title="命令行启动django项目"></a>命令行启动django项目</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver</span><br></pre></td></tr></table></figure><blockquote><p>​        ps:命令行创建django项目，不会自动新建templates文件夹<br>​        需要你手动新建，并且你应该去配置文件中将该文件夹路径添加就去</p></blockquote><h1 id="Pycharm创建django项目"><a href="#Pycharm创建django项目" class="headerlink" title="Pycharm创建django项目"></a>Pycharm创建django项目</h1><blockquote><p>​        new projet 选django(前提是你已经下载了django了)<br>​        1.解释器的选择<br>​        2.自动创建app(自动帮你注册到配置文件中)<br>​        3.会自动帮你新建一个templates文件夹(自动帮你注册到配置文件中)</p></blockquote><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><blockquote><p>​        python3 manage.py startapp 应用名<br>​        Tools里面的run manage.py task<br>​        注意:新建的app一定要在配置文件中先注册(******)</p></blockquote><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><blockquote><p>​        python3 manage.py runserver<br>​        绿色小箭头启动(可以修改端口号)<br>​        注意:不要一次起多个django项目(同一个端口下)(******)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django基础配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人,为什么要努力?</title>
      <link href="2018/11/11/%E8%A7%86%E9%A2%91%20%E4%BA%BA,%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%AA%E5%8A%9B/"/>
      <url>2018/11/11/%E8%A7%86%E9%A2%91%20%E4%BA%BA,%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%AA%E5%8A%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="人-为什么要努力"><a href="#人-为什么要努力" class="headerlink" title="人,为什么要努力?"></a>人,为什么要努力?</h1><iframe   width="900px" height="630px"  src="//player.bilibili.com/player.html?aid=52761403&cid=92328539&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>人为什么要努力啊，也许是为了将来有更多选择，也许是为了报答家人，也许是不辜负父母的期盼，我们在努力的过程中，曾经想过放弃，也许还要在黑暗中行走很久，也许看不到希望。但不要放弃，因为只有努力过我们才能证明自己。献给所有正在高考的学子们。</p>]]></content>
      
      
      <categories>
          
          <category> 收藏的视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
